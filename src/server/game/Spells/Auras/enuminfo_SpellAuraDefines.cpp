/*
 * This file is part of the TrinityCore Project. See AUTHORS file for Copyright information
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation; either version 2 of the License, or (at your
 * option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program. If not, see <http://www.gnu.org/licenses/>.
 */

#include "SpellAuraDefines.h"
#include "Define.h"
#include "SmartEnum.h"
#include <stdexcept>

namespace Trinity::Impl::EnumUtilsImpl
{

/*******************************************************************\
|* data for enum 'AuraType' in 'SpellAuraDefines.h' auto-generated *|
\*******************************************************************/
template <>
TC_API_EXPORT EnumText EnumUtils<AuraType>::ToString(AuraType value)
{
    switch (value)
    {
        case SPELL_AURA_NONE: return { "SPELL_AURA_NONE", "SPELL_AURA_NONE", "" };
        case SPELL_AURA_BIND_SIGHT: return { "SPELL_AURA_BIND_SIGHT", "SPELL_AURA_BIND_SIGHT", "" };
        case SPELL_AURA_MOD_POSSESS: return { "SPELL_AURA_MOD_POSSESS", "SPELL_AURA_MOD_POSSESS", "" };
        case SPELL_AURA_PERIODIC_DAMAGE: return { "SPELL_AURA_PERIODIC_DAMAGE", "SPELL_AURA_PERIODIC_DAMAGE", "" };
        case SPELL_AURA_DUMMY: return { "SPELL_AURA_DUMMY", "SPELL_AURA_DUMMY", "" };
        case SPELL_AURA_MOD_CONFUSE: return { "SPELL_AURA_MOD_CONFUSE", "SPELL_AURA_MOD_CONFUSE", "" };
        case SPELL_AURA_MOD_CHARM: return { "SPELL_AURA_MOD_CHARM", "SPELL_AURA_MOD_CHARM", "" };
        case SPELL_AURA_MOD_FEAR: return { "SPELL_AURA_MOD_FEAR", "SPELL_AURA_MOD_FEAR", "" };
        case SPELL_AURA_PERIODIC_HEAL: return { "SPELL_AURA_PERIODIC_HEAL", "SPELL_AURA_PERIODIC_HEAL", "" };
        case SPELL_AURA_MOD_ATTACKSPEED: return { "SPELL_AURA_MOD_ATTACKSPEED", "SPELL_AURA_MOD_ATTACKSPEED", "" };
        case SPELL_AURA_MOD_THREAT: return { "SPELL_AURA_MOD_THREAT", "SPELL_AURA_MOD_THREAT", "" };
        case SPELL_AURA_MOD_TAUNT: return { "SPELL_AURA_MOD_TAUNT", "SPELL_AURA_MOD_TAUNT", "" };
        case SPELL_AURA_MOD_STUN: return { "SPELL_AURA_MOD_STUN", "SPELL_AURA_MOD_STUN", "" };
        case SPELL_AURA_MOD_DAMAGE_DONE: return { "SPELL_AURA_MOD_DAMAGE_DONE", "SPELL_AURA_MOD_DAMAGE_DONE", "" };
        case SPELL_AURA_MOD_DAMAGE_TAKEN: return { "SPELL_AURA_MOD_DAMAGE_TAKEN", "SPELL_AURA_MOD_DAMAGE_TAKEN", "" };
        case SPELL_AURA_DAMAGE_SHIELD: return { "SPELL_AURA_DAMAGE_SHIELD", "SPELL_AURA_DAMAGE_SHIELD", "" };
        case SPELL_AURA_MOD_STEALTH: return { "SPELL_AURA_MOD_STEALTH", "SPELL_AURA_MOD_STEALTH", "" };
        case SPELL_AURA_MOD_STEALTH_DETECT: return { "SPELL_AURA_MOD_STEALTH_DETECT", "SPELL_AURA_MOD_STEALTH_DETECT", "" };
        case SPELL_AURA_MOD_INVISIBILITY: return { "SPELL_AURA_MOD_INVISIBILITY", "SPELL_AURA_MOD_INVISIBILITY", "" };
        case SPELL_AURA_MOD_INVISIBILITY_DETECT: return { "SPELL_AURA_MOD_INVISIBILITY_DETECT", "SPELL_AURA_MOD_INVISIBILITY_DETECT", "" };
        case SPELL_AURA_OBS_MOD_HEALTH: return { "SPELL_AURA_OBS_MOD_HEALTH", "SPELL_AURA_OBS_MOD_HEALTH", "20, 21 unofficial" };
        case SPELL_AURA_OBS_MOD_POWER: return { "SPELL_AURA_OBS_MOD_POWER", "SPELL_AURA_OBS_MOD_POWER", "" };
        case SPELL_AURA_MOD_RESISTANCE: return { "SPELL_AURA_MOD_RESISTANCE", "SPELL_AURA_MOD_RESISTANCE", "" };
        case SPELL_AURA_PERIODIC_TRIGGER_SPELL: return { "SPELL_AURA_PERIODIC_TRIGGER_SPELL", "SPELL_AURA_PERIODIC_TRIGGER_SPELL", "" };
        case SPELL_AURA_PERIODIC_ENERGIZE: return { "SPELL_AURA_PERIODIC_ENERGIZE", "SPELL_AURA_PERIODIC_ENERGIZE", "" };
        case SPELL_AURA_MOD_PACIFY: return { "SPELL_AURA_MOD_PACIFY", "SPELL_AURA_MOD_PACIFY", "" };
        case SPELL_AURA_MOD_ROOT: return { "SPELL_AURA_MOD_ROOT", "SPELL_AURA_MOD_ROOT", "" };
        case SPELL_AURA_MOD_SILENCE: return { "SPELL_AURA_MOD_SILENCE", "SPELL_AURA_MOD_SILENCE", "" };
        case SPELL_AURA_REFLECT_SPELLS: return { "SPELL_AURA_REFLECT_SPELLS", "SPELL_AURA_REFLECT_SPELLS", "" };
        case SPELL_AURA_MOD_STAT: return { "SPELL_AURA_MOD_STAT", "SPELL_AURA_MOD_STAT", "" };
        case SPELL_AURA_MOD_SKILL: return { "SPELL_AURA_MOD_SKILL", "SPELL_AURA_MOD_SKILL", "" };
        case SPELL_AURA_MOD_INCREASE_SPEED: return { "SPELL_AURA_MOD_INCREASE_SPEED", "SPELL_AURA_MOD_INCREASE_SPEED", "" };
        case SPELL_AURA_MOD_INCREASE_MOUNTED_SPEED: return { "SPELL_AURA_MOD_INCREASE_MOUNTED_SPEED", "SPELL_AURA_MOD_INCREASE_MOUNTED_SPEED", "" };
        case SPELL_AURA_MOD_DECREASE_SPEED: return { "SPELL_AURA_MOD_DECREASE_SPEED", "SPELL_AURA_MOD_DECREASE_SPEED", "" };
        case SPELL_AURA_MOD_INCREASE_HEALTH: return { "SPELL_AURA_MOD_INCREASE_HEALTH", "SPELL_AURA_MOD_INCREASE_HEALTH", "" };
        case SPELL_AURA_MOD_INCREASE_ENERGY: return { "SPELL_AURA_MOD_INCREASE_ENERGY", "SPELL_AURA_MOD_INCREASE_ENERGY", "" };
        case SPELL_AURA_MOD_SHAPESHIFT: return { "SPELL_AURA_MOD_SHAPESHIFT", "SPELL_AURA_MOD_SHAPESHIFT", "" };
        case SPELL_AURA_EFFECT_IMMUNITY: return { "SPELL_AURA_EFFECT_IMMUNITY", "SPELL_AURA_EFFECT_IMMUNITY", "" };
        case SPELL_AURA_STATE_IMMUNITY: return { "SPELL_AURA_STATE_IMMUNITY", "SPELL_AURA_STATE_IMMUNITY", "" };
        case SPELL_AURA_SCHOOL_IMMUNITY: return { "SPELL_AURA_SCHOOL_IMMUNITY", "SPELL_AURA_SCHOOL_IMMUNITY", "" };
        case SPELL_AURA_DAMAGE_IMMUNITY: return { "SPELL_AURA_DAMAGE_IMMUNITY", "SPELL_AURA_DAMAGE_IMMUNITY", "" };
        case SPELL_AURA_DISPEL_IMMUNITY: return { "SPELL_AURA_DISPEL_IMMUNITY", "SPELL_AURA_DISPEL_IMMUNITY", "" };
        case SPELL_AURA_PROC_TRIGGER_SPELL: return { "SPELL_AURA_PROC_TRIGGER_SPELL", "SPELL_AURA_PROC_TRIGGER_SPELL", "" };
        case SPELL_AURA_PROC_TRIGGER_DAMAGE: return { "SPELL_AURA_PROC_TRIGGER_DAMAGE", "SPELL_AURA_PROC_TRIGGER_DAMAGE", "" };
        case SPELL_AURA_TRACK_CREATURES: return { "SPELL_AURA_TRACK_CREATURES", "SPELL_AURA_TRACK_CREATURES", "" };
        case SPELL_AURA_TRACK_RESOURCES: return { "SPELL_AURA_TRACK_RESOURCES", "SPELL_AURA_TRACK_RESOURCES", "" };
        case SPELL_AURA_46: return { "SPELL_AURA_46", "SPELL_AURA_46", "Ignore all Gear test spells" };
        case SPELL_AURA_MOD_PARRY_PERCENT: return { "SPELL_AURA_MOD_PARRY_PERCENT", "SPELL_AURA_MOD_PARRY_PERCENT", "" };
        case SPELL_AURA_PERIODIC_TRIGGER_SPELL_FROM_CLIENT: return { "SPELL_AURA_PERIODIC_TRIGGER_SPELL_FROM_CLIENT", "SPELL_AURA_PERIODIC_TRIGGER_SPELL_FROM_CLIENT", "One periodic spell" };
        case SPELL_AURA_MOD_DODGE_PERCENT: return { "SPELL_AURA_MOD_DODGE_PERCENT", "SPELL_AURA_MOD_DODGE_PERCENT", "" };
        case SPELL_AURA_MOD_CRITICAL_HEALING_AMOUNT: return { "SPELL_AURA_MOD_CRITICAL_HEALING_AMOUNT", "SPELL_AURA_MOD_CRITICAL_HEALING_AMOUNT", "" };
        case SPELL_AURA_MOD_BLOCK_PERCENT: return { "SPELL_AURA_MOD_BLOCK_PERCENT", "SPELL_AURA_MOD_BLOCK_PERCENT", "" };
        case SPELL_AURA_MOD_WEAPON_CRIT_PERCENT: return { "SPELL_AURA_MOD_WEAPON_CRIT_PERCENT", "SPELL_AURA_MOD_WEAPON_CRIT_PERCENT", "" };
        case SPELL_AURA_PERIODIC_LEECH: return { "SPELL_AURA_PERIODIC_LEECH", "SPELL_AURA_PERIODIC_LEECH", "" };
        case SPELL_AURA_MOD_HIT_CHANCE: return { "SPELL_AURA_MOD_HIT_CHANCE", "SPELL_AURA_MOD_HIT_CHANCE", "" };
        case SPELL_AURA_MOD_SPELL_HIT_CHANCE: return { "SPELL_AURA_MOD_SPELL_HIT_CHANCE", "SPELL_AURA_MOD_SPELL_HIT_CHANCE", "" };
        case SPELL_AURA_TRANSFORM: return { "SPELL_AURA_TRANSFORM", "SPELL_AURA_TRANSFORM", "" };
        case SPELL_AURA_MOD_SPELL_CRIT_CHANCE: return { "SPELL_AURA_MOD_SPELL_CRIT_CHANCE", "SPELL_AURA_MOD_SPELL_CRIT_CHANCE", "" };
        case SPELL_AURA_MOD_INCREASE_SWIM_SPEED: return { "SPELL_AURA_MOD_INCREASE_SWIM_SPEED", "SPELL_AURA_MOD_INCREASE_SWIM_SPEED", "" };
        case SPELL_AURA_MOD_DAMAGE_DONE_CREATURE: return { "SPELL_AURA_MOD_DAMAGE_DONE_CREATURE", "SPELL_AURA_MOD_DAMAGE_DONE_CREATURE", "" };
        case SPELL_AURA_MOD_PACIFY_SILENCE: return { "SPELL_AURA_MOD_PACIFY_SILENCE", "SPELL_AURA_MOD_PACIFY_SILENCE", "" };
        case SPELL_AURA_MOD_SCALE: return { "SPELL_AURA_MOD_SCALE", "SPELL_AURA_MOD_SCALE", "" };
        case SPELL_AURA_PERIODIC_HEALTH_FUNNEL: return { "SPELL_AURA_PERIODIC_HEALTH_FUNNEL", "SPELL_AURA_PERIODIC_HEALTH_FUNNEL", "" };
        case SPELL_AURA_MOD_ADDITIONAL_POWER_COST: return { "SPELL_AURA_MOD_ADDITIONAL_POWER_COST", "SPELL_AURA_MOD_ADDITIONAL_POWER_COST", "" };
        case SPELL_AURA_PERIODIC_MANA_LEECH: return { "SPELL_AURA_PERIODIC_MANA_LEECH", "SPELL_AURA_PERIODIC_MANA_LEECH", "" };
        case SPELL_AURA_MOD_CASTING_SPEED_NOT_STACK: return { "SPELL_AURA_MOD_CASTING_SPEED_NOT_STACK", "SPELL_AURA_MOD_CASTING_SPEED_NOT_STACK", "" };
        case SPELL_AURA_FEIGN_DEATH: return { "SPELL_AURA_FEIGN_DEATH", "SPELL_AURA_FEIGN_DEATH", "" };
        case SPELL_AURA_MOD_DISARM: return { "SPELL_AURA_MOD_DISARM", "SPELL_AURA_MOD_DISARM", "" };
        case SPELL_AURA_MOD_STALKED: return { "SPELL_AURA_MOD_STALKED", "SPELL_AURA_MOD_STALKED", "" };
        case SPELL_AURA_SCHOOL_ABSORB: return { "SPELL_AURA_SCHOOL_ABSORB", "SPELL_AURA_SCHOOL_ABSORB", "" };
        case SPELL_AURA_PERIODIC_WEAPON_PERCENT_DAMAGE: return { "SPELL_AURA_PERIODIC_WEAPON_PERCENT_DAMAGE", "SPELL_AURA_PERIODIC_WEAPON_PERCENT_DAMAGE", "" };
        case SPELL_AURA_STORE_TELEPORT_RETURN_POINT: return { "SPELL_AURA_STORE_TELEPORT_RETURN_POINT", "SPELL_AURA_STORE_TELEPORT_RETURN_POINT", "" };
        case SPELL_AURA_MOD_POWER_COST_SCHOOL_PCT: return { "SPELL_AURA_MOD_POWER_COST_SCHOOL_PCT", "SPELL_AURA_MOD_POWER_COST_SCHOOL_PCT", "" };
        case SPELL_AURA_MOD_POWER_COST_SCHOOL: return { "SPELL_AURA_MOD_POWER_COST_SCHOOL", "SPELL_AURA_MOD_POWER_COST_SCHOOL", "" };
        case SPELL_AURA_REFLECT_SPELLS_SCHOOL: return { "SPELL_AURA_REFLECT_SPELLS_SCHOOL", "SPELL_AURA_REFLECT_SPELLS_SCHOOL", "" };
        case SPELL_AURA_MOD_LANGUAGE: return { "SPELL_AURA_MOD_LANGUAGE", "SPELL_AURA_MOD_LANGUAGE", "" };
        case SPELL_AURA_FAR_SIGHT: return { "SPELL_AURA_FAR_SIGHT", "SPELL_AURA_FAR_SIGHT", "" };
        case SPELL_AURA_MECHANIC_IMMUNITY: return { "SPELL_AURA_MECHANIC_IMMUNITY", "SPELL_AURA_MECHANIC_IMMUNITY", "" };
        case SPELL_AURA_MOUNTED: return { "SPELL_AURA_MOUNTED", "SPELL_AURA_MOUNTED", "" };
        case SPELL_AURA_MOD_DAMAGE_PERCENT_DONE: return { "SPELL_AURA_MOD_DAMAGE_PERCENT_DONE", "SPELL_AURA_MOD_DAMAGE_PERCENT_DONE", "" };
        case SPELL_AURA_MOD_PERCENT_STAT: return { "SPELL_AURA_MOD_PERCENT_STAT", "SPELL_AURA_MOD_PERCENT_STAT", "" };
        case SPELL_AURA_SPLIT_DAMAGE_PCT: return { "SPELL_AURA_SPLIT_DAMAGE_PCT", "SPELL_AURA_SPLIT_DAMAGE_PCT", "" };
        case SPELL_AURA_WATER_BREATHING: return { "SPELL_AURA_WATER_BREATHING", "SPELL_AURA_WATER_BREATHING", "" };
        case SPELL_AURA_MOD_BASE_RESISTANCE: return { "SPELL_AURA_MOD_BASE_RESISTANCE", "SPELL_AURA_MOD_BASE_RESISTANCE", "" };
        case SPELL_AURA_MOD_REGEN: return { "SPELL_AURA_MOD_REGEN", "SPELL_AURA_MOD_REGEN", "" };
        case SPELL_AURA_MOD_POWER_REGEN: return { "SPELL_AURA_MOD_POWER_REGEN", "SPELL_AURA_MOD_POWER_REGEN", "" };
        case SPELL_AURA_CHANNEL_DEATH_ITEM: return { "SPELL_AURA_CHANNEL_DEATH_ITEM", "SPELL_AURA_CHANNEL_DEATH_ITEM", "" };
        case SPELL_AURA_MOD_DAMAGE_PERCENT_TAKEN: return { "SPELL_AURA_MOD_DAMAGE_PERCENT_TAKEN", "SPELL_AURA_MOD_DAMAGE_PERCENT_TAKEN", "" };
        case SPELL_AURA_MOD_HEALTH_REGEN_PERCENT: return { "SPELL_AURA_MOD_HEALTH_REGEN_PERCENT", "SPELL_AURA_MOD_HEALTH_REGEN_PERCENT", "" };
        case SPELL_AURA_PERIODIC_DAMAGE_PERCENT: return { "SPELL_AURA_PERIODIC_DAMAGE_PERCENT", "SPELL_AURA_PERIODIC_DAMAGE_PERCENT", "" };
        case SPELL_AURA_90: return { "SPELL_AURA_90", "SPELL_AURA_90", "old SPELL_AURA_MOD_RESIST_CHANCE" };
        case SPELL_AURA_MOD_DETECT_RANGE: return { "SPELL_AURA_MOD_DETECT_RANGE", "SPELL_AURA_MOD_DETECT_RANGE", "" };
        case SPELL_AURA_PREVENTS_FLEEING: return { "SPELL_AURA_PREVENTS_FLEEING", "SPELL_AURA_PREVENTS_FLEEING", "" };
        case SPELL_AURA_MOD_UNATTACKABLE: return { "SPELL_AURA_MOD_UNATTACKABLE", "SPELL_AURA_MOD_UNATTACKABLE", "" };
        case SPELL_AURA_INTERRUPT_REGEN: return { "SPELL_AURA_INTERRUPT_REGEN", "SPELL_AURA_INTERRUPT_REGEN", "" };
        case SPELL_AURA_GHOST: return { "SPELL_AURA_GHOST", "SPELL_AURA_GHOST", "" };
        case SPELL_AURA_SPELL_MAGNET: return { "SPELL_AURA_SPELL_MAGNET", "SPELL_AURA_SPELL_MAGNET", "" };
        case SPELL_AURA_MANA_SHIELD: return { "SPELL_AURA_MANA_SHIELD", "SPELL_AURA_MANA_SHIELD", "" };
        case SPELL_AURA_MOD_SKILL_TALENT: return { "SPELL_AURA_MOD_SKILL_TALENT", "SPELL_AURA_MOD_SKILL_TALENT", "" };
        case SPELL_AURA_MOD_ATTACK_POWER: return { "SPELL_AURA_MOD_ATTACK_POWER", "SPELL_AURA_MOD_ATTACK_POWER", "" };
        case SPELL_AURA_AURAS_VISIBLE: return { "SPELL_AURA_AURAS_VISIBLE", "SPELL_AURA_AURAS_VISIBLE", "" };
        case SPELL_AURA_MOD_RESISTANCE_PCT: return { "SPELL_AURA_MOD_RESISTANCE_PCT", "SPELL_AURA_MOD_RESISTANCE_PCT", "" };
        case SPELL_AURA_MOD_MELEE_ATTACK_POWER_VERSUS: return { "SPELL_AURA_MOD_MELEE_ATTACK_POWER_VERSUS", "SPELL_AURA_MOD_MELEE_ATTACK_POWER_VERSUS", "" };
        case SPELL_AURA_MOD_TOTAL_THREAT: return { "SPELL_AURA_MOD_TOTAL_THREAT", "SPELL_AURA_MOD_TOTAL_THREAT", "" };
        case SPELL_AURA_WATER_WALK: return { "SPELL_AURA_WATER_WALK", "SPELL_AURA_WATER_WALK", "" };
        case SPELL_AURA_FEATHER_FALL: return { "SPELL_AURA_FEATHER_FALL", "SPELL_AURA_FEATHER_FALL", "" };
        case SPELL_AURA_HOVER: return { "SPELL_AURA_HOVER", "SPELL_AURA_HOVER", "" };
        case SPELL_AURA_ADD_FLAT_MODIFIER: return { "SPELL_AURA_ADD_FLAT_MODIFIER", "SPELL_AURA_ADD_FLAT_MODIFIER", "" };
        case SPELL_AURA_ADD_PCT_MODIFIER: return { "SPELL_AURA_ADD_PCT_MODIFIER", "SPELL_AURA_ADD_PCT_MODIFIER", "" };
        case SPELL_AURA_ADD_TARGET_TRIGGER: return { "SPELL_AURA_ADD_TARGET_TRIGGER", "SPELL_AURA_ADD_TARGET_TRIGGER", "" };
        case SPELL_AURA_MOD_POWER_REGEN_PERCENT: return { "SPELL_AURA_MOD_POWER_REGEN_PERCENT", "SPELL_AURA_MOD_POWER_REGEN_PERCENT", "" };
        case SPELL_AURA_INTERCEPT_MELEE_RANGED_ATTACKS: return { "SPELL_AURA_INTERCEPT_MELEE_RANGED_ATTACKS", "SPELL_AURA_INTERCEPT_MELEE_RANGED_ATTACKS", "" };
        case SPELL_AURA_OVERRIDE_CLASS_SCRIPTS: return { "SPELL_AURA_OVERRIDE_CLASS_SCRIPTS", "SPELL_AURA_OVERRIDE_CLASS_SCRIPTS", "" };
        case SPELL_AURA_MOD_RANGED_DAMAGE_TAKEN: return { "SPELL_AURA_MOD_RANGED_DAMAGE_TAKEN", "SPELL_AURA_MOD_RANGED_DAMAGE_TAKEN", "" };
        case SPELL_AURA_MOD_RANGED_DAMAGE_TAKEN_PCT: return { "SPELL_AURA_MOD_RANGED_DAMAGE_TAKEN_PCT", "SPELL_AURA_MOD_RANGED_DAMAGE_TAKEN_PCT", "" };
        case SPELL_AURA_MOD_HEALING: return { "SPELL_AURA_MOD_HEALING", "SPELL_AURA_MOD_HEALING", "" };
        case SPELL_AURA_MOD_REGEN_DURING_COMBAT: return { "SPELL_AURA_MOD_REGEN_DURING_COMBAT", "SPELL_AURA_MOD_REGEN_DURING_COMBAT", "" };
        case SPELL_AURA_MOD_MECHANIC_RESISTANCE: return { "SPELL_AURA_MOD_MECHANIC_RESISTANCE", "SPELL_AURA_MOD_MECHANIC_RESISTANCE", "" };
        case SPELL_AURA_MOD_HEALING_PCT: return { "SPELL_AURA_MOD_HEALING_PCT", "SPELL_AURA_MOD_HEALING_PCT", "" };
        case SPELL_AURA_PVP_TALENTS: return { "SPELL_AURA_PVP_TALENTS", "SPELL_AURA_PVP_TALENTS", "" };
        case SPELL_AURA_UNTRACKABLE: return { "SPELL_AURA_UNTRACKABLE", "SPELL_AURA_UNTRACKABLE", "" };
        case SPELL_AURA_EMPATHY: return { "SPELL_AURA_EMPATHY", "SPELL_AURA_EMPATHY", "" };
        case SPELL_AURA_MOD_OFFHAND_DAMAGE_PCT: return { "SPELL_AURA_MOD_OFFHAND_DAMAGE_PCT", "SPELL_AURA_MOD_OFFHAND_DAMAGE_PCT", "" };
        case SPELL_AURA_MOD_TARGET_RESISTANCE: return { "SPELL_AURA_MOD_TARGET_RESISTANCE", "SPELL_AURA_MOD_TARGET_RESISTANCE", "" };
        case SPELL_AURA_MOD_RANGED_ATTACK_POWER: return { "SPELL_AURA_MOD_RANGED_ATTACK_POWER", "SPELL_AURA_MOD_RANGED_ATTACK_POWER", "" };
        case SPELL_AURA_MOD_MELEE_DAMAGE_TAKEN: return { "SPELL_AURA_MOD_MELEE_DAMAGE_TAKEN", "SPELL_AURA_MOD_MELEE_DAMAGE_TAKEN", "" };
        case SPELL_AURA_MOD_MELEE_DAMAGE_TAKEN_PCT: return { "SPELL_AURA_MOD_MELEE_DAMAGE_TAKEN_PCT", "SPELL_AURA_MOD_MELEE_DAMAGE_TAKEN_PCT", "" };
        case SPELL_AURA_RANGED_ATTACK_POWER_ATTACKER_BONUS: return { "SPELL_AURA_RANGED_ATTACK_POWER_ATTACKER_BONUS", "SPELL_AURA_RANGED_ATTACK_POWER_ATTACKER_BONUS", "" };
        case SPELL_AURA_MOD_FIXATE: return { "SPELL_AURA_MOD_FIXATE", "SPELL_AURA_MOD_FIXATE", "" };
        case SPELL_AURA_MOD_SPEED_ALWAYS: return { "SPELL_AURA_MOD_SPEED_ALWAYS", "SPELL_AURA_MOD_SPEED_ALWAYS", "" };
        case SPELL_AURA_MOD_MOUNTED_SPEED_ALWAYS: return { "SPELL_AURA_MOD_MOUNTED_SPEED_ALWAYS", "SPELL_AURA_MOD_MOUNTED_SPEED_ALWAYS", "" };
        case SPELL_AURA_MOD_RANGED_ATTACK_POWER_VERSUS: return { "SPELL_AURA_MOD_RANGED_ATTACK_POWER_VERSUS", "SPELL_AURA_MOD_RANGED_ATTACK_POWER_VERSUS", "" };
        case SPELL_AURA_MOD_INCREASE_ENERGY_PERCENT: return { "SPELL_AURA_MOD_INCREASE_ENERGY_PERCENT", "SPELL_AURA_MOD_INCREASE_ENERGY_PERCENT", "" };
        case SPELL_AURA_MOD_INCREASE_HEALTH_PERCENT: return { "SPELL_AURA_MOD_INCREASE_HEALTH_PERCENT", "SPELL_AURA_MOD_INCREASE_HEALTH_PERCENT", "" };
        case SPELL_AURA_MOD_MANA_REGEN_INTERRUPT: return { "SPELL_AURA_MOD_MANA_REGEN_INTERRUPT", "SPELL_AURA_MOD_MANA_REGEN_INTERRUPT", "" };
        case SPELL_AURA_MOD_HEALING_DONE: return { "SPELL_AURA_MOD_HEALING_DONE", "SPELL_AURA_MOD_HEALING_DONE", "" };
        case SPELL_AURA_MOD_HEALING_DONE_PERCENT: return { "SPELL_AURA_MOD_HEALING_DONE_PERCENT", "SPELL_AURA_MOD_HEALING_DONE_PERCENT", "" };
        case SPELL_AURA_MOD_TOTAL_STAT_PERCENTAGE: return { "SPELL_AURA_MOD_TOTAL_STAT_PERCENTAGE", "SPELL_AURA_MOD_TOTAL_STAT_PERCENTAGE", "" };
        case SPELL_AURA_MOD_MELEE_HASTE: return { "SPELL_AURA_MOD_MELEE_HASTE", "SPELL_AURA_MOD_MELEE_HASTE", "" };
        case SPELL_AURA_FORCE_REACTION: return { "SPELL_AURA_FORCE_REACTION", "SPELL_AURA_FORCE_REACTION", "" };
        case SPELL_AURA_MOD_RANGED_HASTE: return { "SPELL_AURA_MOD_RANGED_HASTE", "SPELL_AURA_MOD_RANGED_HASTE", "" };
        case SPELL_AURA_141: return { "SPELL_AURA_141", "SPELL_AURA_141", "old SPELL_AURA_MOD_RANGED_AMMO_HASTE, unused now" };
        case SPELL_AURA_MOD_BASE_RESISTANCE_PCT: return { "SPELL_AURA_MOD_BASE_RESISTANCE_PCT", "SPELL_AURA_MOD_BASE_RESISTANCE_PCT", "" };
        case SPELL_AURA_MOD_RECOVERY_RATE_BY_SPELL_LABEL: return { "SPELL_AURA_MOD_RECOVERY_RATE_BY_SPELL_LABEL", "SPELL_AURA_MOD_RECOVERY_RATE_BY_SPELL_LABEL", "" };
        case SPELL_AURA_SAFE_FALL: return { "SPELL_AURA_SAFE_FALL", "SPELL_AURA_SAFE_FALL", "" };
        case SPELL_AURA_MOD_INCREASE_HEALTH_PERCENT2: return { "SPELL_AURA_MOD_INCREASE_HEALTH_PERCENT2", "SPELL_AURA_MOD_INCREASE_HEALTH_PERCENT2", "" };
        case SPELL_AURA_ALLOW_TAME_PET_TYPE: return { "SPELL_AURA_ALLOW_TAME_PET_TYPE", "SPELL_AURA_ALLOW_TAME_PET_TYPE", "" };
        case SPELL_AURA_MECHANIC_IMMUNITY_MASK: return { "SPELL_AURA_MECHANIC_IMMUNITY_MASK", "SPELL_AURA_MECHANIC_IMMUNITY_MASK", "" };
        case SPELL_AURA_MOD_CHARGE_RECOVERY_RATE: return { "SPELL_AURA_MOD_CHARGE_RECOVERY_RATE", "SPELL_AURA_MOD_CHARGE_RECOVERY_RATE", "NYI" };
        case SPELL_AURA_REDUCE_PUSHBACK: return { "SPELL_AURA_REDUCE_PUSHBACK", "SPELL_AURA_REDUCE_PUSHBACK", "Reduce Pushback" };
        case SPELL_AURA_MOD_SHIELD_BLOCKVALUE_PCT: return { "SPELL_AURA_MOD_SHIELD_BLOCKVALUE_PCT", "SPELL_AURA_MOD_SHIELD_BLOCKVALUE_PCT", "" };
        case SPELL_AURA_TRACK_STEALTHED: return { "SPELL_AURA_TRACK_STEALTHED", "SPELL_AURA_TRACK_STEALTHED", "Track Stealthed" };
        case SPELL_AURA_MOD_DETECTED_RANGE: return { "SPELL_AURA_MOD_DETECTED_RANGE", "SPELL_AURA_MOD_DETECTED_RANGE", "Mod Detected Range" };
        case SPELL_AURA_MOD_AUTOATTACK_RANGE: return { "SPELL_AURA_MOD_AUTOATTACK_RANGE", "SPELL_AURA_MOD_AUTOATTACK_RANGE", "" };
        case SPELL_AURA_MOD_STEALTH_LEVEL: return { "SPELL_AURA_MOD_STEALTH_LEVEL", "SPELL_AURA_MOD_STEALTH_LEVEL", "Stealth Level Modifier" };
        case SPELL_AURA_MOD_WATER_BREATHING: return { "SPELL_AURA_MOD_WATER_BREATHING", "SPELL_AURA_MOD_WATER_BREATHING", "Mod Water Breathing" };
        case SPELL_AURA_MOD_REPUTATION_GAIN: return { "SPELL_AURA_MOD_REPUTATION_GAIN", "SPELL_AURA_MOD_REPUTATION_GAIN", "Mod Reputation Gain" };
        case SPELL_AURA_PET_DAMAGE_MULTI: return { "SPELL_AURA_PET_DAMAGE_MULTI", "SPELL_AURA_PET_DAMAGE_MULTI", "Mod Pet Damage" };
        case SPELL_AURA_ALLOW_TALENT_SWAPPING: return { "SPELL_AURA_ALLOW_TALENT_SWAPPING", "SPELL_AURA_ALLOW_TALENT_SWAPPING", "" };
        case SPELL_AURA_NO_PVP_CREDIT: return { "SPELL_AURA_NO_PVP_CREDIT", "SPELL_AURA_NO_PVP_CREDIT", "" };
        case SPELL_AURA_160: return { "SPELL_AURA_160", "SPELL_AURA_160", "old SPELL_AURA_MOD_AOE_AVOIDANCE. Unused 4.3.4" };
        case SPELL_AURA_MOD_HEALTH_REGEN_IN_COMBAT: return { "SPELL_AURA_MOD_HEALTH_REGEN_IN_COMBAT", "SPELL_AURA_MOD_HEALTH_REGEN_IN_COMBAT", "" };
        case SPELL_AURA_POWER_BURN: return { "SPELL_AURA_POWER_BURN", "SPELL_AURA_POWER_BURN", "" };
        case SPELL_AURA_MOD_CRIT_DAMAGE_BONUS: return { "SPELL_AURA_MOD_CRIT_DAMAGE_BONUS", "SPELL_AURA_MOD_CRIT_DAMAGE_BONUS", "" };
        case SPELL_AURA_FORCE_BREATH_BAR: return { "SPELL_AURA_FORCE_BREATH_BAR", "SPELL_AURA_FORCE_BREATH_BAR", "" };
        case SPELL_AURA_MELEE_ATTACK_POWER_ATTACKER_BONUS: return { "SPELL_AURA_MELEE_ATTACK_POWER_ATTACKER_BONUS", "SPELL_AURA_MELEE_ATTACK_POWER_ATTACKER_BONUS", "" };
        case SPELL_AURA_MOD_ATTACK_POWER_PCT: return { "SPELL_AURA_MOD_ATTACK_POWER_PCT", "SPELL_AURA_MOD_ATTACK_POWER_PCT", "" };
        case SPELL_AURA_MOD_RANGED_ATTACK_POWER_PCT: return { "SPELL_AURA_MOD_RANGED_ATTACK_POWER_PCT", "SPELL_AURA_MOD_RANGED_ATTACK_POWER_PCT", "" };
        case SPELL_AURA_MOD_DAMAGE_DONE_VERSUS: return { "SPELL_AURA_MOD_DAMAGE_DONE_VERSUS", "SPELL_AURA_MOD_DAMAGE_DONE_VERSUS", "" };
        case SPELL_AURA_SET_FFA_PVP: return { "SPELL_AURA_SET_FFA_PVP", "SPELL_AURA_SET_FFA_PVP", "" };
        case SPELL_AURA_DETECT_AMORE: return { "SPELL_AURA_DETECT_AMORE", "SPELL_AURA_DETECT_AMORE", "" };
        case SPELL_AURA_MOD_SPEED_NOT_STACK: return { "SPELL_AURA_MOD_SPEED_NOT_STACK", "SPELL_AURA_MOD_SPEED_NOT_STACK", "" };
        case SPELL_AURA_MOD_MOUNTED_SPEED_NOT_STACK: return { "SPELL_AURA_MOD_MOUNTED_SPEED_NOT_STACK", "SPELL_AURA_MOD_MOUNTED_SPEED_NOT_STACK", "" };
        case SPELL_AURA_MOD_RECOVERY_RATE_2: return { "SPELL_AURA_MOD_RECOVERY_RATE_2", "SPELL_AURA_MOD_RECOVERY_RATE_2", "NYI" };
        case SPELL_AURA_MOD_SPELL_DAMAGE_OF_STAT_PERCENT: return { "SPELL_AURA_MOD_SPELL_DAMAGE_OF_STAT_PERCENT", "SPELL_AURA_MOD_SPELL_DAMAGE_OF_STAT_PERCENT", "by defeult intelect, dependent from SPELL_AURA_MOD_SPELL_HEALING_OF_STAT_PERCENT" };
        case SPELL_AURA_MOD_SPELL_HEALING_OF_STAT_PERCENT: return { "SPELL_AURA_MOD_SPELL_HEALING_OF_STAT_PERCENT", "SPELL_AURA_MOD_SPELL_HEALING_OF_STAT_PERCENT", "" };
        case SPELL_AURA_SPIRIT_OF_REDEMPTION: return { "SPELL_AURA_SPIRIT_OF_REDEMPTION", "SPELL_AURA_SPIRIT_OF_REDEMPTION", "" };
        case SPELL_AURA_AOE_CHARM: return { "SPELL_AURA_AOE_CHARM", "SPELL_AURA_AOE_CHARM", "" };
        case SPELL_AURA_MOD_MAX_POWER_PCT: return { "SPELL_AURA_MOD_MAX_POWER_PCT", "SPELL_AURA_MOD_MAX_POWER_PCT", "" };
        case SPELL_AURA_MOD_POWER_DISPLAY: return { "SPELL_AURA_MOD_POWER_DISPLAY", "SPELL_AURA_MOD_POWER_DISPLAY", "" };
        case SPELL_AURA_MOD_FLAT_SPELL_DAMAGE_VERSUS: return { "SPELL_AURA_MOD_FLAT_SPELL_DAMAGE_VERSUS", "SPELL_AURA_MOD_FLAT_SPELL_DAMAGE_VERSUS", "" };
        case SPELL_AURA_MOD_SPELL_CURRENCY_REAGENTS_COUNT_PCT: return { "SPELL_AURA_MOD_SPELL_CURRENCY_REAGENTS_COUNT_PCT", "SPELL_AURA_MOD_SPELL_CURRENCY_REAGENTS_COUNT_PCT", "NYI" };
        case SPELL_AURA_SUPPRESS_ITEM_PASSIVE_EFFECT_BY_SPELL_LABEL: return { "SPELL_AURA_SUPPRESS_ITEM_PASSIVE_EFFECT_BY_SPELL_LABEL", "SPELL_AURA_SUPPRESS_ITEM_PASSIVE_EFFECT_BY_SPELL_LABEL", "" };
        case SPELL_AURA_MOD_CRIT_CHANCE_VERSUS_TARGET_HEALTH: return { "SPELL_AURA_MOD_CRIT_CHANCE_VERSUS_TARGET_HEALTH", "SPELL_AURA_MOD_CRIT_CHANCE_VERSUS_TARGET_HEALTH", "" };
        case SPELL_AURA_MOD_ATTACKER_MELEE_HIT_CHANCE: return { "SPELL_AURA_MOD_ATTACKER_MELEE_HIT_CHANCE", "SPELL_AURA_MOD_ATTACKER_MELEE_HIT_CHANCE", "" };
        case SPELL_AURA_MOD_ATTACKER_RANGED_HIT_CHANCE: return { "SPELL_AURA_MOD_ATTACKER_RANGED_HIT_CHANCE", "SPELL_AURA_MOD_ATTACKER_RANGED_HIT_CHANCE", "" };
        case SPELL_AURA_MOD_ATTACKER_SPELL_HIT_CHANCE: return { "SPELL_AURA_MOD_ATTACKER_SPELL_HIT_CHANCE", "SPELL_AURA_MOD_ATTACKER_SPELL_HIT_CHANCE", "" };
        case SPELL_AURA_MOD_ATTACKER_MELEE_CRIT_CHANCE: return { "SPELL_AURA_MOD_ATTACKER_MELEE_CRIT_CHANCE", "SPELL_AURA_MOD_ATTACKER_MELEE_CRIT_CHANCE", "" };
        case SPELL_AURA_MOD_ATTACKER_RANGED_CRIT_CHANCE: return { "SPELL_AURA_MOD_ATTACKER_RANGED_CRIT_CHANCE", "SPELL_AURA_MOD_ATTACKER_RANGED_CRIT_CHANCE", "" };
        case SPELL_AURA_MOD_RATING: return { "SPELL_AURA_MOD_RATING", "SPELL_AURA_MOD_RATING", "" };
        case SPELL_AURA_MOD_FACTION_REPUTATION_GAIN: return { "SPELL_AURA_MOD_FACTION_REPUTATION_GAIN", "SPELL_AURA_MOD_FACTION_REPUTATION_GAIN", "" };
        case SPELL_AURA_USE_NORMAL_MOVEMENT_SPEED: return { "SPELL_AURA_USE_NORMAL_MOVEMENT_SPEED", "SPELL_AURA_USE_NORMAL_MOVEMENT_SPEED", "" };
        case SPELL_AURA_MOD_MELEE_RANGED_HASTE: return { "SPELL_AURA_MOD_MELEE_RANGED_HASTE", "SPELL_AURA_MOD_MELEE_RANGED_HASTE", "" };
        case SPELL_AURA_MELEE_SLOW: return { "SPELL_AURA_MELEE_SLOW", "SPELL_AURA_MELEE_SLOW", "" };
        case SPELL_AURA_MOD_TARGET_ABSORB_SCHOOL: return { "SPELL_AURA_MOD_TARGET_ABSORB_SCHOOL", "SPELL_AURA_MOD_TARGET_ABSORB_SCHOOL", "" };
        case SPELL_AURA_LEARN_SPELL: return { "SPELL_AURA_LEARN_SPELL", "SPELL_AURA_LEARN_SPELL", "" };
        case SPELL_AURA_MOD_COOLDOWN: return { "SPELL_AURA_MOD_COOLDOWN", "SPELL_AURA_MOD_COOLDOWN", "only 24818 Noxious Breath" };
        case SPELL_AURA_MOD_ATTACKER_SPELL_AND_WEAPON_CRIT_CHANCE: return { "SPELL_AURA_MOD_ATTACKER_SPELL_AND_WEAPON_CRIT_CHANCE", "SPELL_AURA_MOD_ATTACKER_SPELL_AND_WEAPON_CRIT_CHANCE", "" };
        case SPELL_AURA_MOD_COMBAT_RATING_FROM_COMBAT_RATING: return { "SPELL_AURA_MOD_COMBAT_RATING_FROM_COMBAT_RATING", "SPELL_AURA_MOD_COMBAT_RATING_FROM_COMBAT_RATING", "" };
        case SPELL_AURA_199: return { "SPELL_AURA_199", "SPELL_AURA_199", "old SPELL_AURA_MOD_INCREASES_SPELL_PCT_TO_HIT. unused 4.3.4" };
        case SPELL_AURA_MOD_XP_PCT: return { "SPELL_AURA_MOD_XP_PCT", "SPELL_AURA_MOD_XP_PCT", "" };
        case SPELL_AURA_FLY: return { "SPELL_AURA_FLY", "SPELL_AURA_FLY", "" };
        case SPELL_AURA_IGNORE_COMBAT_RESULT: return { "SPELL_AURA_IGNORE_COMBAT_RESULT", "SPELL_AURA_IGNORE_COMBAT_RESULT", "" };
        case SPELL_AURA_PREVENT_INTERRUPT: return { "SPELL_AURA_PREVENT_INTERRUPT", "SPELL_AURA_PREVENT_INTERRUPT", "NYI" };
        case SPELL_AURA_PREVENT_CORPSE_RELEASE: return { "SPELL_AURA_PREVENT_CORPSE_RELEASE", "SPELL_AURA_PREVENT_CORPSE_RELEASE", "NYI" };
        case SPELL_AURA_MOD_CHARGE_COOLDOWN: return { "SPELL_AURA_MOD_CHARGE_COOLDOWN", "SPELL_AURA_MOD_CHARGE_COOLDOWN", "NYI" };
        case SPELL_AURA_MOD_INCREASE_VEHICLE_FLIGHT_SPEED: return { "SPELL_AURA_MOD_INCREASE_VEHICLE_FLIGHT_SPEED", "SPELL_AURA_MOD_INCREASE_VEHICLE_FLIGHT_SPEED", "" };
        case SPELL_AURA_MOD_INCREASE_MOUNTED_FLIGHT_SPEED: return { "SPELL_AURA_MOD_INCREASE_MOUNTED_FLIGHT_SPEED", "SPELL_AURA_MOD_INCREASE_MOUNTED_FLIGHT_SPEED", "" };
        case SPELL_AURA_MOD_INCREASE_FLIGHT_SPEED: return { "SPELL_AURA_MOD_INCREASE_FLIGHT_SPEED", "SPELL_AURA_MOD_INCREASE_FLIGHT_SPEED", "" };
        case SPELL_AURA_MOD_MOUNTED_FLIGHT_SPEED_ALWAYS: return { "SPELL_AURA_MOD_MOUNTED_FLIGHT_SPEED_ALWAYS", "SPELL_AURA_MOD_MOUNTED_FLIGHT_SPEED_ALWAYS", "" };
        case SPELL_AURA_MOD_VEHICLE_SPEED_ALWAYS: return { "SPELL_AURA_MOD_VEHICLE_SPEED_ALWAYS", "SPELL_AURA_MOD_VEHICLE_SPEED_ALWAYS", "" };
        case SPELL_AURA_MOD_FLIGHT_SPEED_NOT_STACK: return { "SPELL_AURA_MOD_FLIGHT_SPEED_NOT_STACK", "SPELL_AURA_MOD_FLIGHT_SPEED_NOT_STACK", "" };
        case SPELL_AURA_MOD_HONOR_GAIN_PCT: return { "SPELL_AURA_MOD_HONOR_GAIN_PCT", "SPELL_AURA_MOD_HONOR_GAIN_PCT", "" };
        case SPELL_AURA_MOD_RAGE_FROM_DAMAGE_DEALT: return { "SPELL_AURA_MOD_RAGE_FROM_DAMAGE_DEALT", "SPELL_AURA_MOD_RAGE_FROM_DAMAGE_DEALT", "" };
        case SPELL_AURA_214: return { "SPELL_AURA_214", "SPELL_AURA_214", "" };
        case SPELL_AURA_ARENA_PREPARATION: return { "SPELL_AURA_ARENA_PREPARATION", "SPELL_AURA_ARENA_PREPARATION", "" };
        case SPELL_AURA_HASTE_SPELLS: return { "SPELL_AURA_HASTE_SPELLS", "SPELL_AURA_HASTE_SPELLS", "" };
        case SPELL_AURA_MOD_MELEE_HASTE_2: return { "SPELL_AURA_MOD_MELEE_HASTE_2", "SPELL_AURA_MOD_MELEE_HASTE_2", "" };
        case SPELL_AURA_ADD_PCT_MODIFIER_BY_SPELL_LABEL: return { "SPELL_AURA_ADD_PCT_MODIFIER_BY_SPELL_LABEL", "SPELL_AURA_ADD_PCT_MODIFIER_BY_SPELL_LABEL", "" };
        case SPELL_AURA_ADD_FLAT_MODIFIER_BY_SPELL_LABEL: return { "SPELL_AURA_ADD_FLAT_MODIFIER_BY_SPELL_LABEL", "SPELL_AURA_ADD_FLAT_MODIFIER_BY_SPELL_LABEL", "" };
        case SPELL_AURA_MOD_ABILITY_SCHOOL_MASK: return { "SPELL_AURA_MOD_ABILITY_SCHOOL_MASK", "SPELL_AURA_MOD_ABILITY_SCHOOL_MASK", "NYI" };
        case SPELL_AURA_MOD_DETAUNT: return { "SPELL_AURA_MOD_DETAUNT", "SPELL_AURA_MOD_DETAUNT", "" };
        case SPELL_AURA_REMOVE_TRANSMOG_COST: return { "SPELL_AURA_REMOVE_TRANSMOG_COST", "SPELL_AURA_REMOVE_TRANSMOG_COST", "" };
        case SPELL_AURA_REMOVE_BARBER_SHOP_COST: return { "SPELL_AURA_REMOVE_BARBER_SHOP_COST", "SPELL_AURA_REMOVE_BARBER_SHOP_COST", "" };
        case SPELL_AURA_LEARN_TALENT: return { "SPELL_AURA_LEARN_TALENT", "SPELL_AURA_LEARN_TALENT", "NYI" };
        case SPELL_AURA_MOD_VISIBILITY_RANGE: return { "SPELL_AURA_MOD_VISIBILITY_RANGE", "SPELL_AURA_MOD_VISIBILITY_RANGE", "" };
        case SPELL_AURA_PERIODIC_DUMMY: return { "SPELL_AURA_PERIODIC_DUMMY", "SPELL_AURA_PERIODIC_DUMMY", "" };
        case SPELL_AURA_PERIODIC_TRIGGER_SPELL_WITH_VALUE: return { "SPELL_AURA_PERIODIC_TRIGGER_SPELL_WITH_VALUE", "SPELL_AURA_PERIODIC_TRIGGER_SPELL_WITH_VALUE", "" };
        case SPELL_AURA_DETECT_STEALTH: return { "SPELL_AURA_DETECT_STEALTH", "SPELL_AURA_DETECT_STEALTH", "" };
        case SPELL_AURA_MOD_AOE_DAMAGE_AVOIDANCE: return { "SPELL_AURA_MOD_AOE_DAMAGE_AVOIDANCE", "SPELL_AURA_MOD_AOE_DAMAGE_AVOIDANCE", "" };
        case SPELL_AURA_MOD_MAX_HEALTH: return { "SPELL_AURA_MOD_MAX_HEALTH", "SPELL_AURA_MOD_MAX_HEALTH", "" };
        case SPELL_AURA_PROC_TRIGGER_SPELL_WITH_VALUE: return { "SPELL_AURA_PROC_TRIGGER_SPELL_WITH_VALUE", "SPELL_AURA_PROC_TRIGGER_SPELL_WITH_VALUE", "" };
        case SPELL_AURA_MECHANIC_DURATION_MOD: return { "SPELL_AURA_MECHANIC_DURATION_MOD", "SPELL_AURA_MECHANIC_DURATION_MOD", "" };
        case SPELL_AURA_CHANGE_MODEL_FOR_ALL_HUMANOIDS: return { "SPELL_AURA_CHANGE_MODEL_FOR_ALL_HUMANOIDS", "SPELL_AURA_CHANGE_MODEL_FOR_ALL_HUMANOIDS", "client-side only" };
        case SPELL_AURA_MECHANIC_DURATION_MOD_NOT_STACK: return { "SPELL_AURA_MECHANIC_DURATION_MOD_NOT_STACK", "SPELL_AURA_MECHANIC_DURATION_MOD_NOT_STACK", "" };
        case SPELL_AURA_MOD_HOVER_NO_HEIGHT_OFFSET: return { "SPELL_AURA_MOD_HOVER_NO_HEIGHT_OFFSET", "SPELL_AURA_MOD_HOVER_NO_HEIGHT_OFFSET", "" };
        case SPELL_AURA_CONTROL_VEHICLE: return { "SPELL_AURA_CONTROL_VEHICLE", "SPELL_AURA_CONTROL_VEHICLE", "" };
        case SPELL_AURA_237: return { "SPELL_AURA_237", "SPELL_AURA_237", "" };
        case SPELL_AURA_238: return { "SPELL_AURA_238", "SPELL_AURA_238", "" };
        case SPELL_AURA_MOD_SCALE_2: return { "SPELL_AURA_MOD_SCALE_2", "SPELL_AURA_MOD_SCALE_2", "" };
        case SPELL_AURA_MOD_EXPERTISE: return { "SPELL_AURA_MOD_EXPERTISE", "SPELL_AURA_MOD_EXPERTISE", "" };
        case SPELL_AURA_FORCE_MOVE_FORWARD: return { "SPELL_AURA_FORCE_MOVE_FORWARD", "SPELL_AURA_FORCE_MOVE_FORWARD", "" };
        case SPELL_AURA_MOD_SPELL_DAMAGE_FROM_HEALING: return { "SPELL_AURA_MOD_SPELL_DAMAGE_FROM_HEALING", "SPELL_AURA_MOD_SPELL_DAMAGE_FROM_HEALING", "" };
        case SPELL_AURA_MOD_FACTION: return { "SPELL_AURA_MOD_FACTION", "SPELL_AURA_MOD_FACTION", "" };
        case SPELL_AURA_COMPREHEND_LANGUAGE: return { "SPELL_AURA_COMPREHEND_LANGUAGE", "SPELL_AURA_COMPREHEND_LANGUAGE", "" };
        case SPELL_AURA_MOD_AURA_DURATION_BY_DISPEL: return { "SPELL_AURA_MOD_AURA_DURATION_BY_DISPEL", "SPELL_AURA_MOD_AURA_DURATION_BY_DISPEL", "" };
        case SPELL_AURA_MOD_AURA_DURATION_BY_DISPEL_NOT_STACK: return { "SPELL_AURA_MOD_AURA_DURATION_BY_DISPEL_NOT_STACK", "SPELL_AURA_MOD_AURA_DURATION_BY_DISPEL_NOT_STACK", "" };
        case SPELL_AURA_CLONE_CASTER: return { "SPELL_AURA_CLONE_CASTER", "SPELL_AURA_CLONE_CASTER", "" };
        case SPELL_AURA_MOD_COMBAT_RESULT_CHANCE: return { "SPELL_AURA_MOD_COMBAT_RESULT_CHANCE", "SPELL_AURA_MOD_COMBAT_RESULT_CHANCE", "" };
        case SPELL_AURA_MOD_DAMAGE_PERCENT_DONE_BY_TARGET_AURA_MECHANIC: return { "SPELL_AURA_MOD_DAMAGE_PERCENT_DONE_BY_TARGET_AURA_MECHANIC", "SPELL_AURA_MOD_DAMAGE_PERCENT_DONE_BY_TARGET_AURA_MECHANIC", "NYI" };
        case SPELL_AURA_MOD_INCREASE_HEALTH_2: return { "SPELL_AURA_MOD_INCREASE_HEALTH_2", "SPELL_AURA_MOD_INCREASE_HEALTH_2", "" };
        case SPELL_AURA_MOD_ENEMY_DODGE: return { "SPELL_AURA_MOD_ENEMY_DODGE", "SPELL_AURA_MOD_ENEMY_DODGE", "" };
        case SPELL_AURA_MOD_SPEED_SLOW_ALL: return { "SPELL_AURA_MOD_SPEED_SLOW_ALL", "SPELL_AURA_MOD_SPEED_SLOW_ALL", "" };
        case SPELL_AURA_MOD_BLOCK_CRIT_CHANCE: return { "SPELL_AURA_MOD_BLOCK_CRIT_CHANCE", "SPELL_AURA_MOD_BLOCK_CRIT_CHANCE", "" };
        case SPELL_AURA_MOD_DISARM_OFFHAND: return { "SPELL_AURA_MOD_DISARM_OFFHAND", "SPELL_AURA_MOD_DISARM_OFFHAND", "" };
        case SPELL_AURA_MOD_MECHANIC_DAMAGE_TAKEN_PERCENT: return { "SPELL_AURA_MOD_MECHANIC_DAMAGE_TAKEN_PERCENT", "SPELL_AURA_MOD_MECHANIC_DAMAGE_TAKEN_PERCENT", "" };
        case SPELL_AURA_NO_REAGENT_USE: return { "SPELL_AURA_NO_REAGENT_USE", "SPELL_AURA_NO_REAGENT_USE", "" };
        case SPELL_AURA_MOD_TARGET_RESIST_BY_SPELL_CLASS: return { "SPELL_AURA_MOD_TARGET_RESIST_BY_SPELL_CLASS", "SPELL_AURA_MOD_TARGET_RESIST_BY_SPELL_CLASS", "" };
        case SPELL_AURA_OVERRIDE_SUMMONED_OBJECT: return { "SPELL_AURA_OVERRIDE_SUMMONED_OBJECT", "SPELL_AURA_OVERRIDE_SUMMONED_OBJECT", "" };
        case SPELL_AURA_MOD_HOT_PCT: return { "SPELL_AURA_MOD_HOT_PCT", "SPELL_AURA_MOD_HOT_PCT", "" };
        case SPELL_AURA_SCREEN_EFFECT: return { "SPELL_AURA_SCREEN_EFFECT", "SPELL_AURA_SCREEN_EFFECT", "" };
        case SPELL_AURA_PHASE: return { "SPELL_AURA_PHASE", "SPELL_AURA_PHASE", "" };
        case SPELL_AURA_ABILITY_IGNORE_AURASTATE: return { "SPELL_AURA_ABILITY_IGNORE_AURASTATE", "SPELL_AURA_ABILITY_IGNORE_AURASTATE", "" };
        case SPELL_AURA_DISABLE_CASTING_EXCEPT_ABILITIES: return { "SPELL_AURA_DISABLE_CASTING_EXCEPT_ABILITIES", "SPELL_AURA_DISABLE_CASTING_EXCEPT_ABILITIES", "" };
        case SPELL_AURA_DISABLE_ATTACKING_EXCEPT_ABILITIES: return { "SPELL_AURA_DISABLE_ATTACKING_EXCEPT_ABILITIES", "SPELL_AURA_DISABLE_ATTACKING_EXCEPT_ABILITIES", "" };
        case SPELL_AURA_265: return { "SPELL_AURA_265", "SPELL_AURA_265", "" };
        case SPELL_AURA_SET_VIGNETTE: return { "SPELL_AURA_SET_VIGNETTE", "SPELL_AURA_SET_VIGNETTE", "NYI" };
        case SPELL_AURA_MOD_IMMUNE_AURA_APPLY_SCHOOL: return { "SPELL_AURA_MOD_IMMUNE_AURA_APPLY_SCHOOL", "SPELL_AURA_MOD_IMMUNE_AURA_APPLY_SCHOOL", "" };
        case SPELL_AURA_MOD_ARMOR_PCT_FROM_STAT: return { "SPELL_AURA_MOD_ARMOR_PCT_FROM_STAT", "SPELL_AURA_MOD_ARMOR_PCT_FROM_STAT", "" };
        case SPELL_AURA_MOD_IGNORE_TARGET_RESIST: return { "SPELL_AURA_MOD_IGNORE_TARGET_RESIST", "SPELL_AURA_MOD_IGNORE_TARGET_RESIST", "" };
        case SPELL_AURA_MOD_SCHOOL_MASK_DAMAGE_FROM_CASTER: return { "SPELL_AURA_MOD_SCHOOL_MASK_DAMAGE_FROM_CASTER", "SPELL_AURA_MOD_SCHOOL_MASK_DAMAGE_FROM_CASTER", "" };
        case SPELL_AURA_MOD_SPELL_DAMAGE_FROM_CASTER: return { "SPELL_AURA_MOD_SPELL_DAMAGE_FROM_CASTER", "SPELL_AURA_MOD_SPELL_DAMAGE_FROM_CASTER", "" };
        case SPELL_AURA_MOD_BLOCK_VALUE_PCT: return { "SPELL_AURA_MOD_BLOCK_VALUE_PCT", "SPELL_AURA_MOD_BLOCK_VALUE_PCT", "NYI" };
        case SPELL_AURA_X_RAY: return { "SPELL_AURA_X_RAY", "SPELL_AURA_X_RAY", "" };
        case SPELL_AURA_MOD_BLOCK_VALUE_FLAT: return { "SPELL_AURA_MOD_BLOCK_VALUE_FLAT", "SPELL_AURA_MOD_BLOCK_VALUE_FLAT", "NYI" };
        case SPELL_AURA_MOD_IGNORE_SHAPESHIFT: return { "SPELL_AURA_MOD_IGNORE_SHAPESHIFT", "SPELL_AURA_MOD_IGNORE_SHAPESHIFT", "" };
        case SPELL_AURA_MOD_DAMAGE_DONE_FOR_MECHANIC: return { "SPELL_AURA_MOD_DAMAGE_DONE_FOR_MECHANIC", "SPELL_AURA_MOD_DAMAGE_DONE_FOR_MECHANIC", "" };
        case SPELL_AURA_277: return { "SPELL_AURA_277", "SPELL_AURA_277", "old SPELL_AURA_MOD_MAX_AFFECTED_TARGETS. unused 4.3.4" };
        case SPELL_AURA_MOD_DISARM_RANGED: return { "SPELL_AURA_MOD_DISARM_RANGED", "SPELL_AURA_MOD_DISARM_RANGED", "" };
        case SPELL_AURA_INITIALIZE_IMAGES: return { "SPELL_AURA_INITIALIZE_IMAGES", "SPELL_AURA_INITIALIZE_IMAGES", "" };
        case SPELL_AURA_280: return { "SPELL_AURA_280", "SPELL_AURA_280", "old SPELL_AURA_MOD_ARMOR_PENETRATION_PCT unused 4.3.4" };
        case SPELL_AURA_PROVIDE_SPELL_FOCUS: return { "SPELL_AURA_PROVIDE_SPELL_FOCUS", "SPELL_AURA_PROVIDE_SPELL_FOCUS", "" };
        case SPELL_AURA_MOD_BASE_HEALTH_PCT: return { "SPELL_AURA_MOD_BASE_HEALTH_PCT", "SPELL_AURA_MOD_BASE_HEALTH_PCT", "" };
        case SPELL_AURA_MOD_HEALING_RECEIVED: return { "SPELL_AURA_MOD_HEALING_RECEIVED", "SPELL_AURA_MOD_HEALING_RECEIVED", "Possibly only for some spell family class spells" };
        case SPELL_AURA_LINKED: return { "SPELL_AURA_LINKED", "SPELL_AURA_LINKED", "" };
        case SPELL_AURA_LINKED_2: return { "SPELL_AURA_LINKED_2", "SPELL_AURA_LINKED_2", "" };
        case SPELL_AURA_MOD_RECOVERY_RATE: return { "SPELL_AURA_MOD_RECOVERY_RATE", "SPELL_AURA_MOD_RECOVERY_RATE", "" };
        case SPELL_AURA_DEFLECT_SPELLS: return { "SPELL_AURA_DEFLECT_SPELLS", "SPELL_AURA_DEFLECT_SPELLS", "" };
        case SPELL_AURA_IGNORE_HIT_DIRECTION: return { "SPELL_AURA_IGNORE_HIT_DIRECTION", "SPELL_AURA_IGNORE_HIT_DIRECTION", "" };
        case SPELL_AURA_PREVENT_DURABILITY_LOSS: return { "SPELL_AURA_PREVENT_DURABILITY_LOSS", "SPELL_AURA_PREVENT_DURABILITY_LOSS", "" };
        case SPELL_AURA_MOD_CRIT_PCT: return { "SPELL_AURA_MOD_CRIT_PCT", "SPELL_AURA_MOD_CRIT_PCT", "" };
        case SPELL_AURA_MOD_XP_QUEST_PCT: return { "SPELL_AURA_MOD_XP_QUEST_PCT", "SPELL_AURA_MOD_XP_QUEST_PCT", "" };
        case SPELL_AURA_OPEN_STABLE: return { "SPELL_AURA_OPEN_STABLE", "SPELL_AURA_OPEN_STABLE", "" };
        case SPELL_AURA_OVERRIDE_SPELLS: return { "SPELL_AURA_OVERRIDE_SPELLS", "SPELL_AURA_OVERRIDE_SPELLS", "" };
        case SPELL_AURA_PREVENT_REGENERATE_POWER: return { "SPELL_AURA_PREVENT_REGENERATE_POWER", "SPELL_AURA_PREVENT_REGENERATE_POWER", "" };
        case SPELL_AURA_MOD_PERIODIC_DAMAGE_TAKEN: return { "SPELL_AURA_MOD_PERIODIC_DAMAGE_TAKEN", "SPELL_AURA_MOD_PERIODIC_DAMAGE_TAKEN", "" };
        case SPELL_AURA_SET_VEHICLE_ID: return { "SPELL_AURA_SET_VEHICLE_ID", "SPELL_AURA_SET_VEHICLE_ID", "" };
        case SPELL_AURA_MOD_ROOT_DISABLE_GRAVITY: return { "SPELL_AURA_MOD_ROOT_DISABLE_GRAVITY", "SPELL_AURA_MOD_ROOT_DISABLE_GRAVITY", "NYI" };
        case SPELL_AURA_MOD_STUN_DISABLE_GRAVITY: return { "SPELL_AURA_MOD_STUN_DISABLE_GRAVITY", "SPELL_AURA_MOD_STUN_DISABLE_GRAVITY", "NYI" };
        case SPELL_AURA_299: return { "SPELL_AURA_299", "SPELL_AURA_299", "" };
        case SPELL_AURA_SHARE_DAMAGE_PCT: return { "SPELL_AURA_SHARE_DAMAGE_PCT", "SPELL_AURA_SHARE_DAMAGE_PCT", "" };
        case SPELL_AURA_SCHOOL_HEAL_ABSORB: return { "SPELL_AURA_SCHOOL_HEAL_ABSORB", "SPELL_AURA_SCHOOL_HEAL_ABSORB", "" };
        case SPELL_AURA_302: return { "SPELL_AURA_302", "SPELL_AURA_302", "" };
        case SPELL_AURA_MOD_DAMAGE_DONE_VERSUS_AURASTATE: return { "SPELL_AURA_MOD_DAMAGE_DONE_VERSUS_AURASTATE", "SPELL_AURA_MOD_DAMAGE_DONE_VERSUS_AURASTATE", "" };
        case SPELL_AURA_MOD_FAKE_INEBRIATE: return { "SPELL_AURA_MOD_FAKE_INEBRIATE", "SPELL_AURA_MOD_FAKE_INEBRIATE", "" };
        case SPELL_AURA_MOD_MINIMUM_SPEED: return { "SPELL_AURA_MOD_MINIMUM_SPEED", "SPELL_AURA_MOD_MINIMUM_SPEED", "" };
        case SPELL_AURA_MOD_CRIT_CHANCE_FOR_CASTER: return { "SPELL_AURA_MOD_CRIT_CHANCE_FOR_CASTER", "SPELL_AURA_MOD_CRIT_CHANCE_FOR_CASTER", "" };
        case SPELL_AURA_CAST_WHILE_WALKING_BY_SPELL_LABEL: return { "SPELL_AURA_CAST_WHILE_WALKING_BY_SPELL_LABEL", "SPELL_AURA_CAST_WHILE_WALKING_BY_SPELL_LABEL", "" };
        case SPELL_AURA_MOD_CRIT_CHANCE_FOR_CASTER_WITH_ABILITIES: return { "SPELL_AURA_MOD_CRIT_CHANCE_FOR_CASTER_WITH_ABILITIES", "SPELL_AURA_MOD_CRIT_CHANCE_FOR_CASTER_WITH_ABILITIES", "" };
        case SPELL_AURA_MOD_RESILIENCE: return { "SPELL_AURA_MOD_RESILIENCE", "SPELL_AURA_MOD_RESILIENCE", "NYI" };
        case SPELL_AURA_MOD_CREATURE_AOE_DAMAGE_AVOIDANCE: return { "SPELL_AURA_MOD_CREATURE_AOE_DAMAGE_AVOIDANCE", "SPELL_AURA_MOD_CREATURE_AOE_DAMAGE_AVOIDANCE", "" };
        case SPELL_AURA_IGNORE_COMBAT: return { "SPELL_AURA_IGNORE_COMBAT", "SPELL_AURA_IGNORE_COMBAT", "NYI" };
        case SPELL_AURA_ANIM_REPLACEMENT_SET: return { "SPELL_AURA_ANIM_REPLACEMENT_SET", "SPELL_AURA_ANIM_REPLACEMENT_SET", "" };
        case SPELL_AURA_MOUNT_ANIM_REPLACEMENT_SET: return { "SPELL_AURA_MOUNT_ANIM_REPLACEMENT_SET", "SPELL_AURA_MOUNT_ANIM_REPLACEMENT_SET", "" };
        case SPELL_AURA_PREVENT_RESURRECTION: return { "SPELL_AURA_PREVENT_RESURRECTION", "SPELL_AURA_PREVENT_RESURRECTION", "" };
        case SPELL_AURA_UNDERWATER_WALKING: return { "SPELL_AURA_UNDERWATER_WALKING", "SPELL_AURA_UNDERWATER_WALKING", "" };
        case SPELL_AURA_SCHOOL_ABSORB_OVERKILL: return { "SPELL_AURA_SCHOOL_ABSORB_OVERKILL", "SPELL_AURA_SCHOOL_ABSORB_OVERKILL", "NYI - absorbs overkill damage" };
        case SPELL_AURA_MOD_SPELL_POWER_PCT: return { "SPELL_AURA_MOD_SPELL_POWER_PCT", "SPELL_AURA_MOD_SPELL_POWER_PCT", "" };
        case SPELL_AURA_MASTERY: return { "SPELL_AURA_MASTERY", "SPELL_AURA_MASTERY", "" };
        case SPELL_AURA_MOD_MELEE_HASTE_3: return { "SPELL_AURA_MOD_MELEE_HASTE_3", "SPELL_AURA_MOD_MELEE_HASTE_3", "" };
        case SPELL_AURA_320: return { "SPELL_AURA_320", "SPELL_AURA_320", "" };
        case SPELL_AURA_MOD_NO_ACTIONS: return { "SPELL_AURA_MOD_NO_ACTIONS", "SPELL_AURA_MOD_NO_ACTIONS", "" };
        case SPELL_AURA_INTERFERE_TARGETTING: return { "SPELL_AURA_INTERFERE_TARGETTING", "SPELL_AURA_INTERFERE_TARGETTING", "" };
        case SPELL_AURA_323: return { "SPELL_AURA_323", "SPELL_AURA_323", "Not used in 4.3.4" };
        case SPELL_AURA_OVERRIDE_UNLOCKED_AZERITE_ESSENCE_RANK: return { "SPELL_AURA_OVERRIDE_UNLOCKED_AZERITE_ESSENCE_RANK", "SPELL_AURA_OVERRIDE_UNLOCKED_AZERITE_ESSENCE_RANK", "testing aura" };
        case SPELL_AURA_LEARN_PVP_TALENT: return { "SPELL_AURA_LEARN_PVP_TALENT", "SPELL_AURA_LEARN_PVP_TALENT", "NYI" };
        case SPELL_AURA_PHASE_GROUP: return { "SPELL_AURA_PHASE_GROUP", "SPELL_AURA_PHASE_GROUP", "Puts the player in all the phases that are in the group with id = miscB" };
        case SPELL_AURA_PHASE_ALWAYS_VISIBLE: return { "SPELL_AURA_PHASE_ALWAYS_VISIBLE", "SPELL_AURA_PHASE_ALWAYS_VISIBLE", "Sets PhaseShiftFlags::AlwaysVisible" };
        case SPELL_AURA_TRIGGER_SPELL_ON_POWER_PCT: return { "SPELL_AURA_TRIGGER_SPELL_ON_POWER_PCT", "SPELL_AURA_TRIGGER_SPELL_ON_POWER_PCT", "Triggers spell when power goes above (MiscB = 0) or falls below (MiscB = 1) specified percent value (once, not every time condition has meet)" };
        case SPELL_AURA_MOD_POWER_GAIN_PCT: return { "SPELL_AURA_MOD_POWER_GAIN_PCT", "SPELL_AURA_MOD_POWER_GAIN_PCT", "" };
        case SPELL_AURA_CAST_WHILE_WALKING: return { "SPELL_AURA_CAST_WHILE_WALKING", "SPELL_AURA_CAST_WHILE_WALKING", "" };
        case SPELL_AURA_FORCE_WEATHER: return { "SPELL_AURA_FORCE_WEATHER", "SPELL_AURA_FORCE_WEATHER", "" };
        case SPELL_AURA_OVERRIDE_ACTIONBAR_SPELLS: return { "SPELL_AURA_OVERRIDE_ACTIONBAR_SPELLS", "SPELL_AURA_OVERRIDE_ACTIONBAR_SPELLS", "" };
        case SPELL_AURA_OVERRIDE_ACTIONBAR_SPELLS_TRIGGERED: return { "SPELL_AURA_OVERRIDE_ACTIONBAR_SPELLS_TRIGGERED", "SPELL_AURA_OVERRIDE_ACTIONBAR_SPELLS_TRIGGERED", "Spells cast with this override have no cast time or power cost" };
        case SPELL_AURA_MOD_AUTOATTACK_CRIT_CHANCE: return { "SPELL_AURA_MOD_AUTOATTACK_CRIT_CHANCE", "SPELL_AURA_MOD_AUTOATTACK_CRIT_CHANCE", "" };
        case SPELL_AURA_335: return { "SPELL_AURA_335", "SPELL_AURA_335", "" };
        case SPELL_AURA_MOUNT_RESTRICTIONS: return { "SPELL_AURA_MOUNT_RESTRICTIONS", "SPELL_AURA_MOUNT_RESTRICTIONS", "" };
        case SPELL_AURA_MOD_VENDOR_ITEMS_PRICES: return { "SPELL_AURA_MOD_VENDOR_ITEMS_PRICES", "SPELL_AURA_MOD_VENDOR_ITEMS_PRICES", "" };
        case SPELL_AURA_MOD_DURABILITY_LOSS: return { "SPELL_AURA_MOD_DURABILITY_LOSS", "SPELL_AURA_MOD_DURABILITY_LOSS", "" };
        case SPELL_AURA_MOD_CRIT_CHANCE_FOR_CASTER_PET: return { "SPELL_AURA_MOD_CRIT_CHANCE_FOR_CASTER_PET", "SPELL_AURA_MOD_CRIT_CHANCE_FOR_CASTER_PET", "" };
        case SPELL_AURA_MOD_RESURRECTED_HEALTH_BY_GUILD_MEMBER: return { "SPELL_AURA_MOD_RESURRECTED_HEALTH_BY_GUILD_MEMBER", "SPELL_AURA_MOD_RESURRECTED_HEALTH_BY_GUILD_MEMBER", "Increases health gained when resurrected by a guild member by X" };
        case SPELL_AURA_MOD_SPELL_CATEGORY_COOLDOWN: return { "SPELL_AURA_MOD_SPELL_CATEGORY_COOLDOWN", "SPELL_AURA_MOD_SPELL_CATEGORY_COOLDOWN", "Modifies cooldown of all spells using affected category" };
        case SPELL_AURA_MOD_MELEE_RANGED_HASTE_2: return { "SPELL_AURA_MOD_MELEE_RANGED_HASTE_2", "SPELL_AURA_MOD_MELEE_RANGED_HASTE_2", "" };
        case SPELL_AURA_MOD_MELEE_DAMAGE_FROM_CASTER: return { "SPELL_AURA_MOD_MELEE_DAMAGE_FROM_CASTER", "SPELL_AURA_MOD_MELEE_DAMAGE_FROM_CASTER", "" };
        case SPELL_AURA_MOD_AUTOATTACK_DAMAGE: return { "SPELL_AURA_MOD_AUTOATTACK_DAMAGE", "SPELL_AURA_MOD_AUTOATTACK_DAMAGE", "" };
        case SPELL_AURA_BYPASS_ARMOR_FOR_CASTER: return { "SPELL_AURA_BYPASS_ARMOR_FOR_CASTER", "SPELL_AURA_BYPASS_ARMOR_FOR_CASTER", "" };
        case SPELL_AURA_ENABLE_ALT_POWER: return { "SPELL_AURA_ENABLE_ALT_POWER", "SPELL_AURA_ENABLE_ALT_POWER", "" };
        case SPELL_AURA_MOD_SPELL_COOLDOWN_BY_HASTE: return { "SPELL_AURA_MOD_SPELL_COOLDOWN_BY_HASTE", "SPELL_AURA_MOD_SPELL_COOLDOWN_BY_HASTE", "" };
        case SPELL_AURA_MOD_MONEY_GAIN: return { "SPELL_AURA_MOD_MONEY_GAIN", "SPELL_AURA_MOD_MONEY_GAIN", "Modifies gold gains from source: [Misc = 0, Quests][Misc = 1, Loot]" };
        case SPELL_AURA_MOD_CURRENCY_GAIN: return { "SPELL_AURA_MOD_CURRENCY_GAIN", "SPELL_AURA_MOD_CURRENCY_GAIN", "" };
        case SPELL_AURA_350: return { "SPELL_AURA_350", "SPELL_AURA_350", "" };
        case SPELL_AURA_MOD_CURRENCY_CATEGORY_GAIN_PCT: return { "SPELL_AURA_MOD_CURRENCY_CATEGORY_GAIN_PCT", "SPELL_AURA_MOD_CURRENCY_CATEGORY_GAIN_PCT", "NYI" };
        case SPELL_AURA_352: return { "SPELL_AURA_352", "SPELL_AURA_352", "" };
        case SPELL_AURA_MOD_CAMOUFLAGE: return { "SPELL_AURA_MOD_CAMOUFLAGE", "SPELL_AURA_MOD_CAMOUFLAGE", "NYI" };
        case SPELL_AURA_MOD_HEALING_DONE_PCT_VERSUS_TARGET_HEALTH: return { "SPELL_AURA_MOD_HEALING_DONE_PCT_VERSUS_TARGET_HEALTH", "SPELL_AURA_MOD_HEALING_DONE_PCT_VERSUS_TARGET_HEALTH", "Restoration Shaman mastery - mod healing based on target's health (less = more healing)" };
        case SPELL_AURA_MOD_CASTING_SPEED: return { "SPELL_AURA_MOD_CASTING_SPEED", "SPELL_AURA_MOD_CASTING_SPEED", "NYI" };
        case SPELL_AURA_PROVIDE_TOTEM_CATEGORY: return { "SPELL_AURA_PROVIDE_TOTEM_CATEGORY", "SPELL_AURA_PROVIDE_TOTEM_CATEGORY", "" };
        case SPELL_AURA_ENABLE_BOSS1_UNIT_FRAME: return { "SPELL_AURA_ENABLE_BOSS1_UNIT_FRAME", "SPELL_AURA_ENABLE_BOSS1_UNIT_FRAME", "" };
        case SPELL_AURA_WORGEN_ALTERED_FORM: return { "SPELL_AURA_WORGEN_ALTERED_FORM", "SPELL_AURA_WORGEN_ALTERED_FORM", "" };
        case SPELL_AURA_MOD_HEALING_DONE_VERSUS_AURASTATE: return { "SPELL_AURA_MOD_HEALING_DONE_VERSUS_AURASTATE", "SPELL_AURA_MOD_HEALING_DONE_VERSUS_AURASTATE", "" };
        case SPELL_AURA_PROC_TRIGGER_SPELL_COPY: return { "SPELL_AURA_PROC_TRIGGER_SPELL_COPY", "SPELL_AURA_PROC_TRIGGER_SPELL_COPY", "Procs the same spell that caused this proc (Dragonwrath, Tarecgosa's Rest)" };
        case SPELL_AURA_OVERRIDE_AUTOATTACK_WITH_MELEE_SPELL: return { "SPELL_AURA_OVERRIDE_AUTOATTACK_WITH_MELEE_SPELL", "SPELL_AURA_OVERRIDE_AUTOATTACK_WITH_MELEE_SPELL", "" };
        case SPELL_AURA_362: return { "SPELL_AURA_362", "SPELL_AURA_362", "Not used in 4.3.4" };
        case SPELL_AURA_MOD_NEXT_SPELL: return { "SPELL_AURA_MOD_NEXT_SPELL", "SPELL_AURA_MOD_NEXT_SPELL", "Used by 101601 Throw Totem - causes the client to initialize spell cast with specified spell" };
        case SPELL_AURA_364: return { "SPELL_AURA_364", "SPELL_AURA_364", "Not used in 4.3.4" };
        case SPELL_AURA_MAX_FAR_CLIP_PLANE: return { "SPELL_AURA_MAX_FAR_CLIP_PLANE", "SPELL_AURA_MAX_FAR_CLIP_PLANE", "Overrides client's View Distance setting to max(\042Fair\042, current_setting) and turns off terrain display" };
        case SPELL_AURA_OVERRIDE_SPELL_POWER_BY_AP_PCT: return { "SPELL_AURA_OVERRIDE_SPELL_POWER_BY_AP_PCT", "SPELL_AURA_OVERRIDE_SPELL_POWER_BY_AP_PCT", "NYI - Sets spellpower equal to % of attack power, discarding all other bonuses (from gear and buffs)" };
        case SPELL_AURA_OVERRIDE_AUTOATTACK_WITH_RANGED_SPELL: return { "SPELL_AURA_OVERRIDE_AUTOATTACK_WITH_RANGED_SPELL", "SPELL_AURA_OVERRIDE_AUTOATTACK_WITH_RANGED_SPELL", "" };
        case SPELL_AURA_368: return { "SPELL_AURA_368", "SPELL_AURA_368", "Not used in 4.3.4" };
        case SPELL_AURA_ENABLE_POWER_BAR_TIMER: return { "SPELL_AURA_ENABLE_POWER_BAR_TIMER", "SPELL_AURA_ENABLE_POWER_BAR_TIMER", "" };
        case SPELL_AURA_SPELL_OVERRIDE_NAME_GROUP: return { "SPELL_AURA_SPELL_OVERRIDE_NAME_GROUP", "SPELL_AURA_SPELL_OVERRIDE_NAME_GROUP", "picks a random SpellOverrideName id from a group (group id in miscValue)" };
        case SPELL_AURA_371: return { "SPELL_AURA_371", "SPELL_AURA_371", "" };
        case SPELL_AURA_OVERRIDE_MOUNT_FROM_SET: return { "SPELL_AURA_OVERRIDE_MOUNT_FROM_SET", "SPELL_AURA_OVERRIDE_MOUNT_FROM_SET", "NYI" };
        case SPELL_AURA_MOD_SPEED_NO_CONTROL: return { "SPELL_AURA_MOD_SPEED_NO_CONTROL", "SPELL_AURA_MOD_SPEED_NO_CONTROL", "NYI" };
        case SPELL_AURA_MODIFY_FALL_DAMAGE_PCT: return { "SPELL_AURA_MODIFY_FALL_DAMAGE_PCT", "SPELL_AURA_MODIFY_FALL_DAMAGE_PCT", "" };
        case SPELL_AURA_HIDE_MODEL_AND_EQUIPEMENT_SLOTS: return { "SPELL_AURA_HIDE_MODEL_AND_EQUIPEMENT_SLOTS", "SPELL_AURA_HIDE_MODEL_AND_EQUIPEMENT_SLOTS", "" };
        case SPELL_AURA_MOD_CURRENCY_GAIN_FROM_SOURCE: return { "SPELL_AURA_MOD_CURRENCY_GAIN_FROM_SOURCE", "SPELL_AURA_MOD_CURRENCY_GAIN_FROM_SOURCE", "NYI" };
        case SPELL_AURA_CAST_WHILE_WALKING_ALL: return { "SPELL_AURA_CAST_WHILE_WALKING_ALL", "SPELL_AURA_CAST_WHILE_WALKING_ALL", "Enables casting all spells while moving" };
        case SPELL_AURA_MOD_POSSESS_PET: return { "SPELL_AURA_MOD_POSSESS_PET", "SPELL_AURA_MOD_POSSESS_PET", "" };
        case SPELL_AURA_MOD_MANA_REGEN_PCT: return { "SPELL_AURA_MOD_MANA_REGEN_PCT", "SPELL_AURA_MOD_MANA_REGEN_PCT", "" };
        case SPELL_AURA_MOD_GLOBAL_COOLDOWN_BY_HASTE: return { "SPELL_AURA_MOD_GLOBAL_COOLDOWN_BY_HASTE", "SPELL_AURA_MOD_GLOBAL_COOLDOWN_BY_HASTE", "" };
        case SPELL_AURA_MOD_DAMAGE_TAKEN_FROM_CASTER_PET: return { "SPELL_AURA_MOD_DAMAGE_TAKEN_FROM_CASTER_PET", "SPELL_AURA_MOD_DAMAGE_TAKEN_FROM_CASTER_PET", "NYI" };
        case SPELL_AURA_MOD_PET_STAT_PCT: return { "SPELL_AURA_MOD_PET_STAT_PCT", "SPELL_AURA_MOD_PET_STAT_PCT", "NYI" };
        case SPELL_AURA_IGNORE_SPELL_COOLDOWN: return { "SPELL_AURA_IGNORE_SPELL_COOLDOWN", "SPELL_AURA_IGNORE_SPELL_COOLDOWN", "NYI" };
        case SPELL_AURA_384: return { "SPELL_AURA_384", "SPELL_AURA_384", "" };
        case SPELL_AURA_385: return { "SPELL_AURA_385", "SPELL_AURA_385", "" };
        case SPELL_AURA_386: return { "SPELL_AURA_386", "SPELL_AURA_386", "" };
        case SPELL_AURA_387: return { "SPELL_AURA_387", "SPELL_AURA_387", "" };
        case SPELL_AURA_MOD_TAXI_FLIGHT_SPEED: return { "SPELL_AURA_MOD_TAXI_FLIGHT_SPEED", "SPELL_AURA_MOD_TAXI_FLIGHT_SPEED", "NYI" };
        case SPELL_AURA_389: return { "SPELL_AURA_389", "SPELL_AURA_389", "" };
        case SPELL_AURA_390: return { "SPELL_AURA_390", "SPELL_AURA_390", "" };
        case SPELL_AURA_391: return { "SPELL_AURA_391", "SPELL_AURA_391", "" };
        case SPELL_AURA_392: return { "SPELL_AURA_392", "SPELL_AURA_392", "" };
        case SPELL_AURA_BLOCK_SPELLS_IN_FRONT: return { "SPELL_AURA_BLOCK_SPELLS_IN_FRONT", "SPELL_AURA_BLOCK_SPELLS_IN_FRONT", "NYI" };
        case SPELL_AURA_SHOW_CONFIRMATION_PROMPT: return { "SPELL_AURA_SHOW_CONFIRMATION_PROMPT", "SPELL_AURA_SHOW_CONFIRMATION_PROMPT", "" };
        case SPELL_AURA_AREA_TRIGGER: return { "SPELL_AURA_AREA_TRIGGER", "SPELL_AURA_AREA_TRIGGER", "NYI" };
        case SPELL_AURA_TRIGGER_SPELL_ON_POWER_AMOUNT: return { "SPELL_AURA_TRIGGER_SPELL_ON_POWER_AMOUNT", "SPELL_AURA_TRIGGER_SPELL_ON_POWER_AMOUNT", "Triggers spell when power goes above (MiscA = 0) or falls below (MiscA = 1) specified percent value (once, not every time condition has meet)" };
        case SPELL_AURA_BATTLEGROUND_PLAYER_POSITION_FACTIONAL: return { "SPELL_AURA_BATTLEGROUND_PLAYER_POSITION_FACTIONAL", "SPELL_AURA_BATTLEGROUND_PLAYER_POSITION_FACTIONAL", "" };
        case SPELL_AURA_BATTLEGROUND_PLAYER_POSITION: return { "SPELL_AURA_BATTLEGROUND_PLAYER_POSITION", "SPELL_AURA_BATTLEGROUND_PLAYER_POSITION", "" };
        case SPELL_AURA_MOD_TIME_RATE: return { "SPELL_AURA_MOD_TIME_RATE", "SPELL_AURA_MOD_TIME_RATE", "" };
        case SPELL_AURA_MOD_SKILL_2: return { "SPELL_AURA_MOD_SKILL_2", "SPELL_AURA_MOD_SKILL_2", "" };
        case SPELL_AURA_401: return { "SPELL_AURA_401", "SPELL_AURA_401", "" };
        case SPELL_AURA_MOD_OVERRIDE_POWER_DISPLAY: return { "SPELL_AURA_MOD_OVERRIDE_POWER_DISPLAY", "SPELL_AURA_MOD_OVERRIDE_POWER_DISPLAY", "" };
        case SPELL_AURA_OVERRIDE_SPELL_VISUAL: return { "SPELL_AURA_OVERRIDE_SPELL_VISUAL", "SPELL_AURA_OVERRIDE_SPELL_VISUAL", "" };
        case SPELL_AURA_OVERRIDE_ATTACK_POWER_BY_SP_PCT: return { "SPELL_AURA_OVERRIDE_ATTACK_POWER_BY_SP_PCT", "SPELL_AURA_OVERRIDE_ATTACK_POWER_BY_SP_PCT", "" };
        case SPELL_AURA_MOD_RATING_PCT: return { "SPELL_AURA_MOD_RATING_PCT", "SPELL_AURA_MOD_RATING_PCT", "" };
        case SPELL_AURA_KEYBOUND_OVERRIDE: return { "SPELL_AURA_KEYBOUND_OVERRIDE", "SPELL_AURA_KEYBOUND_OVERRIDE", "NYI" };
        case SPELL_AURA_MOD_FEAR_2: return { "SPELL_AURA_MOD_FEAR_2", "SPELL_AURA_MOD_FEAR_2", "NYI" };
        case SPELL_AURA_SET_ACTION_BUTTON_SPELL_COUNT: return { "SPELL_AURA_SET_ACTION_BUTTON_SPELL_COUNT", "SPELL_AURA_SET_ACTION_BUTTON_SPELL_COUNT", "" };
        case SPELL_AURA_CAN_TURN_WHILE_FALLING: return { "SPELL_AURA_CAN_TURN_WHILE_FALLING", "SPELL_AURA_CAN_TURN_WHILE_FALLING", "" };
        case SPELL_AURA_410: return { "SPELL_AURA_410", "SPELL_AURA_410", "" };
        case SPELL_AURA_MOD_MAX_CHARGES: return { "SPELL_AURA_MOD_MAX_CHARGES", "SPELL_AURA_MOD_MAX_CHARGES", "" };
        case SPELL_AURA_412: return { "SPELL_AURA_412", "SPELL_AURA_412", "" };
        case SPELL_AURA_MOD_RANGED_ATTACK_DEFLECT_CHANCE: return { "SPELL_AURA_MOD_RANGED_ATTACK_DEFLECT_CHANCE", "SPELL_AURA_MOD_RANGED_ATTACK_DEFLECT_CHANCE", "NYI" };
        case SPELL_AURA_MOD_RANGED_ATTACK_BLOCK_CHANCE_IN_FRONT: return { "SPELL_AURA_MOD_RANGED_ATTACK_BLOCK_CHANCE_IN_FRONT", "SPELL_AURA_MOD_RANGED_ATTACK_BLOCK_CHANCE_IN_FRONT", "NYI" };
        case SPELL_AURA_415: return { "SPELL_AURA_415", "SPELL_AURA_415", "" };
        case SPELL_AURA_MOD_COOLDOWN_BY_HASTE_REGEN: return { "SPELL_AURA_MOD_COOLDOWN_BY_HASTE_REGEN", "SPELL_AURA_MOD_COOLDOWN_BY_HASTE_REGEN", "" };
        case SPELL_AURA_MOD_GLOBAL_COOLDOWN_BY_HASTE_REGEN: return { "SPELL_AURA_MOD_GLOBAL_COOLDOWN_BY_HASTE_REGEN", "SPELL_AURA_MOD_GLOBAL_COOLDOWN_BY_HASTE_REGEN", "" };
        case SPELL_AURA_MOD_MAX_POWER: return { "SPELL_AURA_MOD_MAX_POWER", "SPELL_AURA_MOD_MAX_POWER", "NYI" };
        case SPELL_AURA_MOD_BASE_MANA_PCT: return { "SPELL_AURA_MOD_BASE_MANA_PCT", "SPELL_AURA_MOD_BASE_MANA_PCT", "" };
        case SPELL_AURA_MOD_BATTLE_PET_XP_PCT: return { "SPELL_AURA_MOD_BATTLE_PET_XP_PCT", "SPELL_AURA_MOD_BATTLE_PET_XP_PCT", "" };
        case SPELL_AURA_MOD_ABSORB_EFFECTS_DONE_PCT: return { "SPELL_AURA_MOD_ABSORB_EFFECTS_DONE_PCT", "SPELL_AURA_MOD_ABSORB_EFFECTS_DONE_PCT", "NYI" };
        case SPELL_AURA_MOD_ABSORB_EFFECTS_TAKEN_PCT: return { "SPELL_AURA_MOD_ABSORB_EFFECTS_TAKEN_PCT", "SPELL_AURA_MOD_ABSORB_EFFECTS_TAKEN_PCT", "NYI" };
        case SPELL_AURA_MOD_MANA_COST_PCT: return { "SPELL_AURA_MOD_MANA_COST_PCT", "SPELL_AURA_MOD_MANA_COST_PCT", "" };
        case SPELL_AURA_CASTER_IGNORE_LOS: return { "SPELL_AURA_CASTER_IGNORE_LOS", "SPELL_AURA_CASTER_IGNORE_LOS", "NYI" };
        case SPELL_AURA_425: return { "SPELL_AURA_425", "SPELL_AURA_425", "" };
        case SPELL_AURA_426: return { "SPELL_AURA_426", "SPELL_AURA_426", "" };
        case SPELL_AURA_SCALE_PLAYER_LEVEL: return { "SPELL_AURA_SCALE_PLAYER_LEVEL", "SPELL_AURA_SCALE_PLAYER_LEVEL", "NYI" };
        case SPELL_AURA_LINKED_SUMMON: return { "SPELL_AURA_LINKED_SUMMON", "SPELL_AURA_LINKED_SUMMON", "" };
        case SPELL_AURA_MOD_SUMMON_DAMAGE: return { "SPELL_AURA_MOD_SUMMON_DAMAGE", "SPELL_AURA_MOD_SUMMON_DAMAGE", "NYI - increases damage done by all summons, not just controlled pets" };
        case SPELL_AURA_PLAY_SCENE: return { "SPELL_AURA_PLAY_SCENE", "SPELL_AURA_PLAY_SCENE", "" };
        case SPELL_AURA_MOD_OVERRIDE_ZONE_PVP_TYPE: return { "SPELL_AURA_MOD_OVERRIDE_ZONE_PVP_TYPE", "SPELL_AURA_MOD_OVERRIDE_ZONE_PVP_TYPE", "NYI" };
        case SPELL_AURA_432: return { "SPELL_AURA_432", "SPELL_AURA_432", "" };
        case SPELL_AURA_433: return { "SPELL_AURA_433", "SPELL_AURA_433", "" };
        case SPELL_AURA_434: return { "SPELL_AURA_434", "SPELL_AURA_434", "" };
        case SPELL_AURA_435: return { "SPELL_AURA_435", "SPELL_AURA_435", "" };
        case SPELL_AURA_MOD_ENVIRONMENTAL_DAMAGE_TAKEN: return { "SPELL_AURA_MOD_ENVIRONMENTAL_DAMAGE_TAKEN", "SPELL_AURA_MOD_ENVIRONMENTAL_DAMAGE_TAKEN", "" };
        case SPELL_AURA_MOD_MINIMUM_SPEED_RATE: return { "SPELL_AURA_MOD_MINIMUM_SPEED_RATE", "SPELL_AURA_MOD_MINIMUM_SPEED_RATE", "" };
        case SPELL_AURA_PRELOAD_PHASE: return { "SPELL_AURA_PRELOAD_PHASE", "SPELL_AURA_PRELOAD_PHASE", "NYI" };
        case SPELL_AURA_439: return { "SPELL_AURA_439", "SPELL_AURA_439", "" };
        case SPELL_AURA_MOD_MULTISTRIKE_DAMAGE: return { "SPELL_AURA_MOD_MULTISTRIKE_DAMAGE", "SPELL_AURA_MOD_MULTISTRIKE_DAMAGE", "NYI" };
        case SPELL_AURA_MOD_MULTISTRIKE_CHANCE: return { "SPELL_AURA_MOD_MULTISTRIKE_CHANCE", "SPELL_AURA_MOD_MULTISTRIKE_CHANCE", "NYI" };
        case SPELL_AURA_MOD_READINESS: return { "SPELL_AURA_MOD_READINESS", "SPELL_AURA_MOD_READINESS", "NYI" };
        case SPELL_AURA_MOD_LEECH: return { "SPELL_AURA_MOD_LEECH", "SPELL_AURA_MOD_LEECH", "" };
        case SPELL_AURA_444: return { "SPELL_AURA_444", "SPELL_AURA_444", "" };
        case SPELL_AURA_445: return { "SPELL_AURA_445", "SPELL_AURA_445", "" };
        case SPELL_AURA_MOD_DRAGONRIDING: return { "SPELL_AURA_MOD_DRAGONRIDING", "SPELL_AURA_MOD_DRAGONRIDING", "" };
        case SPELL_AURA_MOD_XP_FROM_CREATURE_TYPE: return { "SPELL_AURA_MOD_XP_FROM_CREATURE_TYPE", "SPELL_AURA_MOD_XP_FROM_CREATURE_TYPE", "" };
        case SPELL_AURA_448: return { "SPELL_AURA_448", "SPELL_AURA_448", "" };
        case SPELL_AURA_449: return { "SPELL_AURA_449", "SPELL_AURA_449", "" };
        case SPELL_AURA_450: return { "SPELL_AURA_450", "SPELL_AURA_450", "" };
        case SPELL_AURA_OVERRIDE_PET_SPECS: return { "SPELL_AURA_OVERRIDE_PET_SPECS", "SPELL_AURA_OVERRIDE_PET_SPECS", "" };
        case SPELL_AURA_452: return { "SPELL_AURA_452", "SPELL_AURA_452", "" };
        case SPELL_AURA_CHARGE_RECOVERY_MOD: return { "SPELL_AURA_CHARGE_RECOVERY_MOD", "SPELL_AURA_CHARGE_RECOVERY_MOD", "" };
        case SPELL_AURA_CHARGE_RECOVERY_MULTIPLIER: return { "SPELL_AURA_CHARGE_RECOVERY_MULTIPLIER", "SPELL_AURA_CHARGE_RECOVERY_MULTIPLIER", "" };
        case SPELL_AURA_MOD_ROOT_2: return { "SPELL_AURA_MOD_ROOT_2", "SPELL_AURA_MOD_ROOT_2", "" };
        case SPELL_AURA_CHARGE_RECOVERY_AFFECTED_BY_HASTE: return { "SPELL_AURA_CHARGE_RECOVERY_AFFECTED_BY_HASTE", "SPELL_AURA_CHARGE_RECOVERY_AFFECTED_BY_HASTE", "" };
        case SPELL_AURA_CHARGE_RECOVERY_AFFECTED_BY_HASTE_REGEN: return { "SPELL_AURA_CHARGE_RECOVERY_AFFECTED_BY_HASTE_REGEN", "SPELL_AURA_CHARGE_RECOVERY_AFFECTED_BY_HASTE_REGEN", "" };
        case SPELL_AURA_IGNORE_DUAL_WIELD_HIT_PENALTY: return { "SPELL_AURA_IGNORE_DUAL_WIELD_HIT_PENALTY", "SPELL_AURA_IGNORE_DUAL_WIELD_HIT_PENALTY", "" };
        case SPELL_AURA_IGNORE_MOVEMENT_FORCES: return { "SPELL_AURA_IGNORE_MOVEMENT_FORCES", "SPELL_AURA_IGNORE_MOVEMENT_FORCES", "" };
        case SPELL_AURA_RESET_COOLDOWNS_ON_DUEL_START: return { "SPELL_AURA_RESET_COOLDOWNS_ON_DUEL_START", "SPELL_AURA_RESET_COOLDOWNS_ON_DUEL_START", "NYI" };
        case SPELL_AURA_461: return { "SPELL_AURA_461", "SPELL_AURA_461", "" };
        case SPELL_AURA_MOD_HEALING_AND_ABSORB_FROM_CASTER: return { "SPELL_AURA_MOD_HEALING_AND_ABSORB_FROM_CASTER", "SPELL_AURA_MOD_HEALING_AND_ABSORB_FROM_CASTER", "NYI" };
        case SPELL_AURA_CONVERT_CRIT_RATING_PCT_TO_PARRY_RATING: return { "SPELL_AURA_CONVERT_CRIT_RATING_PCT_TO_PARRY_RATING", "SPELL_AURA_CONVERT_CRIT_RATING_PCT_TO_PARRY_RATING", "NYI" };
        case SPELL_AURA_MOD_ATTACK_POWER_OF_BONUS_ARMOR: return { "SPELL_AURA_MOD_ATTACK_POWER_OF_BONUS_ARMOR", "SPELL_AURA_MOD_ATTACK_POWER_OF_BONUS_ARMOR", "NYI" };
        case SPELL_AURA_MOD_BONUS_ARMOR: return { "SPELL_AURA_MOD_BONUS_ARMOR", "SPELL_AURA_MOD_BONUS_ARMOR", "" };
        case SPELL_AURA_MOD_BONUS_ARMOR_PCT: return { "SPELL_AURA_MOD_BONUS_ARMOR_PCT", "SPELL_AURA_MOD_BONUS_ARMOR_PCT", "Affects bonus armor gain from all sources except base stats" };
        case SPELL_AURA_MOD_STAT_BONUS_PCT: return { "SPELL_AURA_MOD_STAT_BONUS_PCT", "SPELL_AURA_MOD_STAT_BONUS_PCT", "Affects stat gain from all sources except base stats" };
        case SPELL_AURA_TRIGGER_SPELL_ON_HEALTH_PCT: return { "SPELL_AURA_TRIGGER_SPELL_ON_HEALTH_PCT", "SPELL_AURA_TRIGGER_SPELL_ON_HEALTH_PCT", "Triggers spell when health goes above (MiscA = 0) or falls below (MiscA = 1) specified percent value (once, not every time condition has meet)" };
        case SPELL_AURA_SHOW_CONFIRMATION_PROMPT_WITH_DIFFICULTY: return { "SPELL_AURA_SHOW_CONFIRMATION_PROMPT_WITH_DIFFICULTY", "SPELL_AURA_SHOW_CONFIRMATION_PROMPT_WITH_DIFFICULTY", "" };
        case SPELL_AURA_MOD_AURA_TIME_RATE_BY_SPELL_LABEL: return { "SPELL_AURA_MOD_AURA_TIME_RATE_BY_SPELL_LABEL", "SPELL_AURA_MOD_AURA_TIME_RATE_BY_SPELL_LABEL", "NYI" };
        case SPELL_AURA_MOD_VERSATILITY: return { "SPELL_AURA_MOD_VERSATILITY", "SPELL_AURA_MOD_VERSATILITY", "" };
        case SPELL_AURA_472: return { "SPELL_AURA_472", "SPELL_AURA_472", "" };
        case SPELL_AURA_PREVENT_DURABILITY_LOSS_FROM_COMBAT: return { "SPELL_AURA_PREVENT_DURABILITY_LOSS_FROM_COMBAT", "SPELL_AURA_PREVENT_DURABILITY_LOSS_FROM_COMBAT", "Prevents durability loss from dealing/taking damage" };
        case SPELL_AURA_REPLACE_ITEM_BONUS_TREE: return { "SPELL_AURA_REPLACE_ITEM_BONUS_TREE", "SPELL_AURA_REPLACE_ITEM_BONUS_TREE", "NYI" };
        case SPELL_AURA_ALLOW_USING_GAMEOBJECTS_WHILE_MOUNTED: return { "SPELL_AURA_ALLOW_USING_GAMEOBJECTS_WHILE_MOUNTED", "SPELL_AURA_ALLOW_USING_GAMEOBJECTS_WHILE_MOUNTED", "" };
        case SPELL_AURA_MOD_CURRENCY_GAIN_LOOTED: return { "SPELL_AURA_MOD_CURRENCY_GAIN_LOOTED", "SPELL_AURA_MOD_CURRENCY_GAIN_LOOTED", "" };
        case SPELL_AURA_477: return { "SPELL_AURA_477", "SPELL_AURA_477", "" };
        case SPELL_AURA_478: return { "SPELL_AURA_478", "SPELL_AURA_478", "" };
        case SPELL_AURA_479: return { "SPELL_AURA_479", "SPELL_AURA_479", "" };
        case SPELL_AURA_MOD_ARTIFACT_ITEM_LEVEL: return { "SPELL_AURA_MOD_ARTIFACT_ITEM_LEVEL", "SPELL_AURA_MOD_ARTIFACT_ITEM_LEVEL", "" };
        case SPELL_AURA_CONVERT_CONSUMED_RUNE: return { "SPELL_AURA_CONVERT_CONSUMED_RUNE", "SPELL_AURA_CONVERT_CONSUMED_RUNE", "" };
        case SPELL_AURA_PROFIL_CAMERA: return { "SPELL_AURA_PROFIL_CAMERA", "SPELL_AURA_PROFIL_CAMERA", "" };
        case SPELL_AURA_SUPPRESS_TRANSFORMS: return { "SPELL_AURA_SUPPRESS_TRANSFORMS", "SPELL_AURA_SUPPRESS_TRANSFORMS", "NYI" };
        case SPELL_AURA_ALLOW_INTERRUPT_SPELL: return { "SPELL_AURA_ALLOW_INTERRUPT_SPELL", "SPELL_AURA_ALLOW_INTERRUPT_SPELL", "NYI" };
        case SPELL_AURA_MOD_MOVEMENT_FORCE_MAGNITUDE: return { "SPELL_AURA_MOD_MOVEMENT_FORCE_MAGNITUDE", "SPELL_AURA_MOD_MOVEMENT_FORCE_MAGNITUDE", "" };
        case SPELL_AURA_486: return { "SPELL_AURA_486", "SPELL_AURA_486", "" };
        case SPELL_AURA_COSMETIC_MOUNTED: return { "SPELL_AURA_COSMETIC_MOUNTED", "SPELL_AURA_COSMETIC_MOUNTED", "" };
        case SPELL_AURA_DISABLE_GRAVITY: return { "SPELL_AURA_DISABLE_GRAVITY", "SPELL_AURA_DISABLE_GRAVITY", "" };
        case SPELL_AURA_MOD_ALTERNATIVE_DEFAULT_LANGUAGE: return { "SPELL_AURA_MOD_ALTERNATIVE_DEFAULT_LANGUAGE", "SPELL_AURA_MOD_ALTERNATIVE_DEFAULT_LANGUAGE", "" };
        case SPELL_AURA_SWITCH_TEAM: return { "SPELL_AURA_SWITCH_TEAM", "SPELL_AURA_SWITCH_TEAM", "" };
        case SPELL_AURA_491: return { "SPELL_AURA_491", "SPELL_AURA_491", "" };
        case SPELL_AURA_492: return { "SPELL_AURA_492", "SPELL_AURA_492", "" };
        case SPELL_AURA_ANIMAL_COMPANION: return { "SPELL_AURA_ANIMAL_COMPANION", "SPELL_AURA_ANIMAL_COMPANION", "1 spell, 267116 - Animal Companion (modifies Call Pet)" };
        case SPELL_AURA_SET_POWER_POINT_CHARGE: return { "SPELL_AURA_SET_POWER_POINT_CHARGE", "SPELL_AURA_SET_POWER_POINT_CHARGE", "NYI" };
        case SPELL_AURA_TRIGGER_SPELL_ON_EXPIRE: return { "SPELL_AURA_TRIGGER_SPELL_ON_EXPIRE", "SPELL_AURA_TRIGGER_SPELL_ON_EXPIRE", "" };
        case SPELL_AURA_ALLOW_CHANGING_EQUIPMENT_IN_TORGHAST: return { "SPELL_AURA_ALLOW_CHANGING_EQUIPMENT_IN_TORGHAST", "SPELL_AURA_ALLOW_CHANGING_EQUIPMENT_IN_TORGHAST", "NYI" };
        case SPELL_AURA_MOD_ANIMA_GAIN: return { "SPELL_AURA_MOD_ANIMA_GAIN", "SPELL_AURA_MOD_ANIMA_GAIN", "NYI" };
        case SPELL_AURA_CURRENCY_LOSS_PCT_ON_DEATH: return { "SPELL_AURA_CURRENCY_LOSS_PCT_ON_DEATH", "SPELL_AURA_CURRENCY_LOSS_PCT_ON_DEATH", "NYI" };
        case SPELL_AURA_MOD_RESTED_XP_CONSUMPTION: return { "SPELL_AURA_MOD_RESTED_XP_CONSUMPTION", "SPELL_AURA_MOD_RESTED_XP_CONSUMPTION", "" };
        case SPELL_AURA_IGNORE_SPELL_CHARGE_COOLDOWN: return { "SPELL_AURA_IGNORE_SPELL_CHARGE_COOLDOWN", "SPELL_AURA_IGNORE_SPELL_CHARGE_COOLDOWN", "Implemented in SpellHistory::HasCharge" };
        case SPELL_AURA_MOD_CRITICAL_DAMAGE_TAKEN_FROM_CASTER: return { "SPELL_AURA_MOD_CRITICAL_DAMAGE_TAKEN_FROM_CASTER", "SPELL_AURA_MOD_CRITICAL_DAMAGE_TAKEN_FROM_CASTER", "" };
        case SPELL_AURA_MOD_VERSATILITY_DAMAGE_DONE_BENEFIT: return { "SPELL_AURA_MOD_VERSATILITY_DAMAGE_DONE_BENEFIT", "SPELL_AURA_MOD_VERSATILITY_DAMAGE_DONE_BENEFIT", "NYI" };
        case SPELL_AURA_MOD_VERSATILITY_HEALING_DONE_BENEFIT: return { "SPELL_AURA_MOD_VERSATILITY_HEALING_DONE_BENEFIT", "SPELL_AURA_MOD_VERSATILITY_HEALING_DONE_BENEFIT", "NYI" };
        case SPELL_AURA_MOD_HEALING_TAKEN_FROM_CASTER: return { "SPELL_AURA_MOD_HEALING_TAKEN_FROM_CASTER", "SPELL_AURA_MOD_HEALING_TAKEN_FROM_CASTER", "" };
        case SPELL_AURA_MOD_PLAYER_CHOICE_REROLLS: return { "SPELL_AURA_MOD_PLAYER_CHOICE_REROLLS", "SPELL_AURA_MOD_PLAYER_CHOICE_REROLLS", "NYI" };
        case SPELL_AURA_DISABLE_INERTIA: return { "SPELL_AURA_DISABLE_INERTIA", "SPELL_AURA_DISABLE_INERTIA", "" };
        case SPELL_AURA_507: return { "SPELL_AURA_507", "SPELL_AURA_507", "" };
        case SPELL_AURA_508: return { "SPELL_AURA_508", "SPELL_AURA_508", "" };
        case SPELL_AURA_509: return { "SPELL_AURA_509", "SPELL_AURA_509", "" };
        case SPELL_AURA_MODIFIED_RAID_INSTANCE: return { "SPELL_AURA_MODIFIED_RAID_INSTANCE", "SPELL_AURA_MODIFIED_RAID_INSTANCE", "Related to \042Fated\042 raid affixes" };
        case SPELL_AURA_511: return { "SPELL_AURA_511", "SPELL_AURA_511", "" };
        case SPELL_AURA_512: return { "SPELL_AURA_512", "SPELL_AURA_512", "" };
        case SPELL_AURA_513: return { "SPELL_AURA_513", "SPELL_AURA_513", "" };
        case SPELL_AURA_514: return { "SPELL_AURA_514", "SPELL_AURA_514", "" };
        case SPELL_AURA_515: return { "SPELL_AURA_515", "SPELL_AURA_515", "" };
        case SPELL_AURA_516: return { "SPELL_AURA_516", "SPELL_AURA_516", "" };
        case SPELL_AURA_517: return { "SPELL_AURA_517", "SPELL_AURA_517", "" };
        case SPELL_AURA_518: return { "SPELL_AURA_518", "SPELL_AURA_518", "" };
        case SPELL_AURA_519: return { "SPELL_AURA_519", "SPELL_AURA_519", "" };
        case SPELL_AURA_520: return { "SPELL_AURA_520", "SPELL_AURA_520", "" };
        case SPELL_AURA_521: return { "SPELL_AURA_521", "SPELL_AURA_521", "" };
        case SPELL_AURA_522: return { "SPELL_AURA_522", "SPELL_AURA_522", "" };
        case SPELL_AURA_523: return { "SPELL_AURA_523", "SPELL_AURA_523", "" };
        case SPELL_AURA_524: return { "SPELL_AURA_524", "SPELL_AURA_524", "" };
        case SPELL_AURA_525: return { "SPELL_AURA_525", "SPELL_AURA_525", "" };
        case SPELL_AURA_526: return { "SPELL_AURA_526", "SPELL_AURA_526", "" };
        case SPELL_AURA_527: return { "SPELL_AURA_527", "SPELL_AURA_527", "" };
        case SPELL_AURA_528: return { "SPELL_AURA_528", "SPELL_AURA_528", "" };
        case SPELL_AURA_529: return { "SPELL_AURA_529", "SPELL_AURA_529", "" };
        case SPELL_AURA_530: return { "SPELL_AURA_530", "SPELL_AURA_530", "" };
        case SPELL_AURA_531: return { "SPELL_AURA_531", "SPELL_AURA_531", "" };
        case TOTAL_AURAS: return { "TOTAL_AURAS", "TOTAL_AURAS", "" };
        default: throw std::out_of_range("value");
    }
}

template <>
TC_API_EXPORT size_t EnumUtils<AuraType>::Count() { return 533; }

template <>
TC_API_EXPORT AuraType EnumUtils<AuraType>::FromIndex(size_t index)
{
    switch (index)
    {
        case 0: return SPELL_AURA_NONE;
        case 1: return SPELL_AURA_BIND_SIGHT;
        case 2: return SPELL_AURA_MOD_POSSESS;
        case 3: return SPELL_AURA_PERIODIC_DAMAGE;
        case 4: return SPELL_AURA_DUMMY;
        case 5: return SPELL_AURA_MOD_CONFUSE;
        case 6: return SPELL_AURA_MOD_CHARM;
        case 7: return SPELL_AURA_MOD_FEAR;
        case 8: return SPELL_AURA_PERIODIC_HEAL;
        case 9: return SPELL_AURA_MOD_ATTACKSPEED;
        case 10: return SPELL_AURA_MOD_THREAT;
        case 11: return SPELL_AURA_MOD_TAUNT;
        case 12: return SPELL_AURA_MOD_STUN;
        case 13: return SPELL_AURA_MOD_DAMAGE_DONE;
        case 14: return SPELL_AURA_MOD_DAMAGE_TAKEN;
        case 15: return SPELL_AURA_DAMAGE_SHIELD;
        case 16: return SPELL_AURA_MOD_STEALTH;
        case 17: return SPELL_AURA_MOD_STEALTH_DETECT;
        case 18: return SPELL_AURA_MOD_INVISIBILITY;
        case 19: return SPELL_AURA_MOD_INVISIBILITY_DETECT;
        case 20: return SPELL_AURA_OBS_MOD_HEALTH;
        case 21: return SPELL_AURA_OBS_MOD_POWER;
        case 22: return SPELL_AURA_MOD_RESISTANCE;
        case 23: return SPELL_AURA_PERIODIC_TRIGGER_SPELL;
        case 24: return SPELL_AURA_PERIODIC_ENERGIZE;
        case 25: return SPELL_AURA_MOD_PACIFY;
        case 26: return SPELL_AURA_MOD_ROOT;
        case 27: return SPELL_AURA_MOD_SILENCE;
        case 28: return SPELL_AURA_REFLECT_SPELLS;
        case 29: return SPELL_AURA_MOD_STAT;
        case 30: return SPELL_AURA_MOD_SKILL;
        case 31: return SPELL_AURA_MOD_INCREASE_SPEED;
        case 32: return SPELL_AURA_MOD_INCREASE_MOUNTED_SPEED;
        case 33: return SPELL_AURA_MOD_DECREASE_SPEED;
        case 34: return SPELL_AURA_MOD_INCREASE_HEALTH;
        case 35: return SPELL_AURA_MOD_INCREASE_ENERGY;
        case 36: return SPELL_AURA_MOD_SHAPESHIFT;
        case 37: return SPELL_AURA_EFFECT_IMMUNITY;
        case 38: return SPELL_AURA_STATE_IMMUNITY;
        case 39: return SPELL_AURA_SCHOOL_IMMUNITY;
        case 40: return SPELL_AURA_DAMAGE_IMMUNITY;
        case 41: return SPELL_AURA_DISPEL_IMMUNITY;
        case 42: return SPELL_AURA_PROC_TRIGGER_SPELL;
        case 43: return SPELL_AURA_PROC_TRIGGER_DAMAGE;
        case 44: return SPELL_AURA_TRACK_CREATURES;
        case 45: return SPELL_AURA_TRACK_RESOURCES;
        case 46: return SPELL_AURA_46;
        case 47: return SPELL_AURA_MOD_PARRY_PERCENT;
        case 48: return SPELL_AURA_PERIODIC_TRIGGER_SPELL_FROM_CLIENT;
        case 49: return SPELL_AURA_MOD_DODGE_PERCENT;
        case 50: return SPELL_AURA_MOD_CRITICAL_HEALING_AMOUNT;
        case 51: return SPELL_AURA_MOD_BLOCK_PERCENT;
        case 52: return SPELL_AURA_MOD_WEAPON_CRIT_PERCENT;
        case 53: return SPELL_AURA_PERIODIC_LEECH;
        case 54: return SPELL_AURA_MOD_HIT_CHANCE;
        case 55: return SPELL_AURA_MOD_SPELL_HIT_CHANCE;
        case 56: return SPELL_AURA_TRANSFORM;
        case 57: return SPELL_AURA_MOD_SPELL_CRIT_CHANCE;
        case 58: return SPELL_AURA_MOD_INCREASE_SWIM_SPEED;
        case 59: return SPELL_AURA_MOD_DAMAGE_DONE_CREATURE;
        case 60: return SPELL_AURA_MOD_PACIFY_SILENCE;
        case 61: return SPELL_AURA_MOD_SCALE;
        case 62: return SPELL_AURA_PERIODIC_HEALTH_FUNNEL;
        case 63: return SPELL_AURA_MOD_ADDITIONAL_POWER_COST;
        case 64: return SPELL_AURA_PERIODIC_MANA_LEECH;
        case 65: return SPELL_AURA_MOD_CASTING_SPEED_NOT_STACK;
        case 66: return SPELL_AURA_FEIGN_DEATH;
        case 67: return SPELL_AURA_MOD_DISARM;
        case 68: return SPELL_AURA_MOD_STALKED;
        case 69: return SPELL_AURA_SCHOOL_ABSORB;
        case 70: return SPELL_AURA_PERIODIC_WEAPON_PERCENT_DAMAGE;
        case 71: return SPELL_AURA_STORE_TELEPORT_RETURN_POINT;
        case 72: return SPELL_AURA_MOD_POWER_COST_SCHOOL_PCT;
        case 73: return SPELL_AURA_MOD_POWER_COST_SCHOOL;
        case 74: return SPELL_AURA_REFLECT_SPELLS_SCHOOL;
        case 75: return SPELL_AURA_MOD_LANGUAGE;
        case 76: return SPELL_AURA_FAR_SIGHT;
        case 77: return SPELL_AURA_MECHANIC_IMMUNITY;
        case 78: return SPELL_AURA_MOUNTED;
        case 79: return SPELL_AURA_MOD_DAMAGE_PERCENT_DONE;
        case 80: return SPELL_AURA_MOD_PERCENT_STAT;
        case 81: return SPELL_AURA_SPLIT_DAMAGE_PCT;
        case 82: return SPELL_AURA_WATER_BREATHING;
        case 83: return SPELL_AURA_MOD_BASE_RESISTANCE;
        case 84: return SPELL_AURA_MOD_REGEN;
        case 85: return SPELL_AURA_MOD_POWER_REGEN;
        case 86: return SPELL_AURA_CHANNEL_DEATH_ITEM;
        case 87: return SPELL_AURA_MOD_DAMAGE_PERCENT_TAKEN;
        case 88: return SPELL_AURA_MOD_HEALTH_REGEN_PERCENT;
        case 89: return SPELL_AURA_PERIODIC_DAMAGE_PERCENT;
        case 90: return SPELL_AURA_90;
        case 91: return SPELL_AURA_MOD_DETECT_RANGE;
        case 92: return SPELL_AURA_PREVENTS_FLEEING;
        case 93: return SPELL_AURA_MOD_UNATTACKABLE;
        case 94: return SPELL_AURA_INTERRUPT_REGEN;
        case 95: return SPELL_AURA_GHOST;
        case 96: return SPELL_AURA_SPELL_MAGNET;
        case 97: return SPELL_AURA_MANA_SHIELD;
        case 98: return SPELL_AURA_MOD_SKILL_TALENT;
        case 99: return SPELL_AURA_MOD_ATTACK_POWER;
        case 100: return SPELL_AURA_AURAS_VISIBLE;
        case 101: return SPELL_AURA_MOD_RESISTANCE_PCT;
        case 102: return SPELL_AURA_MOD_MELEE_ATTACK_POWER_VERSUS;
        case 103: return SPELL_AURA_MOD_TOTAL_THREAT;
        case 104: return SPELL_AURA_WATER_WALK;
        case 105: return SPELL_AURA_FEATHER_FALL;
        case 106: return SPELL_AURA_HOVER;
        case 107: return SPELL_AURA_ADD_FLAT_MODIFIER;
        case 108: return SPELL_AURA_ADD_PCT_MODIFIER;
        case 109: return SPELL_AURA_ADD_TARGET_TRIGGER;
        case 110: return SPELL_AURA_MOD_POWER_REGEN_PERCENT;
        case 111: return SPELL_AURA_INTERCEPT_MELEE_RANGED_ATTACKS;
        case 112: return SPELL_AURA_OVERRIDE_CLASS_SCRIPTS;
        case 113: return SPELL_AURA_MOD_RANGED_DAMAGE_TAKEN;
        case 114: return SPELL_AURA_MOD_RANGED_DAMAGE_TAKEN_PCT;
        case 115: return SPELL_AURA_MOD_HEALING;
        case 116: return SPELL_AURA_MOD_REGEN_DURING_COMBAT;
        case 117: return SPELL_AURA_MOD_MECHANIC_RESISTANCE;
        case 118: return SPELL_AURA_MOD_HEALING_PCT;
        case 119: return SPELL_AURA_PVP_TALENTS;
        case 120: return SPELL_AURA_UNTRACKABLE;
        case 121: return SPELL_AURA_EMPATHY;
        case 122: return SPELL_AURA_MOD_OFFHAND_DAMAGE_PCT;
        case 123: return SPELL_AURA_MOD_TARGET_RESISTANCE;
        case 124: return SPELL_AURA_MOD_RANGED_ATTACK_POWER;
        case 125: return SPELL_AURA_MOD_MELEE_DAMAGE_TAKEN;
        case 126: return SPELL_AURA_MOD_MELEE_DAMAGE_TAKEN_PCT;
        case 127: return SPELL_AURA_RANGED_ATTACK_POWER_ATTACKER_BONUS;
        case 128: return SPELL_AURA_MOD_FIXATE;
        case 129: return SPELL_AURA_MOD_SPEED_ALWAYS;
        case 130: return SPELL_AURA_MOD_MOUNTED_SPEED_ALWAYS;
        case 131: return SPELL_AURA_MOD_RANGED_ATTACK_POWER_VERSUS;
        case 132: return SPELL_AURA_MOD_INCREASE_ENERGY_PERCENT;
        case 133: return SPELL_AURA_MOD_INCREASE_HEALTH_PERCENT;
        case 134: return SPELL_AURA_MOD_MANA_REGEN_INTERRUPT;
        case 135: return SPELL_AURA_MOD_HEALING_DONE;
        case 136: return SPELL_AURA_MOD_HEALING_DONE_PERCENT;
        case 137: return SPELL_AURA_MOD_TOTAL_STAT_PERCENTAGE;
        case 138: return SPELL_AURA_MOD_MELEE_HASTE;
        case 139: return SPELL_AURA_FORCE_REACTION;
        case 140: return SPELL_AURA_MOD_RANGED_HASTE;
        case 141: return SPELL_AURA_141;
        case 142: return SPELL_AURA_MOD_BASE_RESISTANCE_PCT;
        case 143: return SPELL_AURA_MOD_RECOVERY_RATE_BY_SPELL_LABEL;
        case 144: return SPELL_AURA_SAFE_FALL;
        case 145: return SPELL_AURA_MOD_INCREASE_HEALTH_PERCENT2;
        case 146: return SPELL_AURA_ALLOW_TAME_PET_TYPE;
        case 147: return SPELL_AURA_MECHANIC_IMMUNITY_MASK;
        case 148: return SPELL_AURA_MOD_CHARGE_RECOVERY_RATE;
        case 149: return SPELL_AURA_REDUCE_PUSHBACK;
        case 150: return SPELL_AURA_MOD_SHIELD_BLOCKVALUE_PCT;
        case 151: return SPELL_AURA_TRACK_STEALTHED;
        case 152: return SPELL_AURA_MOD_DETECTED_RANGE;
        case 153: return SPELL_AURA_MOD_AUTOATTACK_RANGE;
        case 154: return SPELL_AURA_MOD_STEALTH_LEVEL;
        case 155: return SPELL_AURA_MOD_WATER_BREATHING;
        case 156: return SPELL_AURA_MOD_REPUTATION_GAIN;
        case 157: return SPELL_AURA_PET_DAMAGE_MULTI;
        case 158: return SPELL_AURA_ALLOW_TALENT_SWAPPING;
        case 159: return SPELL_AURA_NO_PVP_CREDIT;
        case 160: return SPELL_AURA_160;
        case 161: return SPELL_AURA_MOD_HEALTH_REGEN_IN_COMBAT;
        case 162: return SPELL_AURA_POWER_BURN;
        case 163: return SPELL_AURA_MOD_CRIT_DAMAGE_BONUS;
        case 164: return SPELL_AURA_FORCE_BREATH_BAR;
        case 165: return SPELL_AURA_MELEE_ATTACK_POWER_ATTACKER_BONUS;
        case 166: return SPELL_AURA_MOD_ATTACK_POWER_PCT;
        case 167: return SPELL_AURA_MOD_RANGED_ATTACK_POWER_PCT;
        case 168: return SPELL_AURA_MOD_DAMAGE_DONE_VERSUS;
        case 169: return SPELL_AURA_SET_FFA_PVP;
        case 170: return SPELL_AURA_DETECT_AMORE;
        case 171: return SPELL_AURA_MOD_SPEED_NOT_STACK;
        case 172: return SPELL_AURA_MOD_MOUNTED_SPEED_NOT_STACK;
        case 173: return SPELL_AURA_MOD_RECOVERY_RATE_2;
        case 174: return SPELL_AURA_MOD_SPELL_DAMAGE_OF_STAT_PERCENT;
        case 175: return SPELL_AURA_MOD_SPELL_HEALING_OF_STAT_PERCENT;
        case 176: return SPELL_AURA_SPIRIT_OF_REDEMPTION;
        case 177: return SPELL_AURA_AOE_CHARM;
        case 178: return SPELL_AURA_MOD_MAX_POWER_PCT;
        case 179: return SPELL_AURA_MOD_POWER_DISPLAY;
        case 180: return SPELL_AURA_MOD_FLAT_SPELL_DAMAGE_VERSUS;
        case 181: return SPELL_AURA_MOD_SPELL_CURRENCY_REAGENTS_COUNT_PCT;
        case 182: return SPELL_AURA_SUPPRESS_ITEM_PASSIVE_EFFECT_BY_SPELL_LABEL;
        case 183: return SPELL_AURA_MOD_CRIT_CHANCE_VERSUS_TARGET_HEALTH;
        case 184: return SPELL_AURA_MOD_ATTACKER_MELEE_HIT_CHANCE;
        case 185: return SPELL_AURA_MOD_ATTACKER_RANGED_HIT_CHANCE;
        case 186: return SPELL_AURA_MOD_ATTACKER_SPELL_HIT_CHANCE;
        case 187: return SPELL_AURA_MOD_ATTACKER_MELEE_CRIT_CHANCE;
        case 188: return SPELL_AURA_MOD_ATTACKER_RANGED_CRIT_CHANCE;
        case 189: return SPELL_AURA_MOD_RATING;
        case 190: return SPELL_AURA_MOD_FACTION_REPUTATION_GAIN;
        case 191: return SPELL_AURA_USE_NORMAL_MOVEMENT_SPEED;
        case 192: return SPELL_AURA_MOD_MELEE_RANGED_HASTE;
        case 193: return SPELL_AURA_MELEE_SLOW;
        case 194: return SPELL_AURA_MOD_TARGET_ABSORB_SCHOOL;
        case 195: return SPELL_AURA_LEARN_SPELL;
        case 196: return SPELL_AURA_MOD_COOLDOWN;
        case 197: return SPELL_AURA_MOD_ATTACKER_SPELL_AND_WEAPON_CRIT_CHANCE;
        case 198: return SPELL_AURA_MOD_COMBAT_RATING_FROM_COMBAT_RATING;
        case 199: return SPELL_AURA_199;
        case 200: return SPELL_AURA_MOD_XP_PCT;
        case 201: return SPELL_AURA_FLY;
        case 202: return SPELL_AURA_IGNORE_COMBAT_RESULT;
        case 203: return SPELL_AURA_PREVENT_INTERRUPT;
        case 204: return SPELL_AURA_PREVENT_CORPSE_RELEASE;
        case 205: return SPELL_AURA_MOD_CHARGE_COOLDOWN;
        case 206: return SPELL_AURA_MOD_INCREASE_VEHICLE_FLIGHT_SPEED;
        case 207: return SPELL_AURA_MOD_INCREASE_MOUNTED_FLIGHT_SPEED;
        case 208: return SPELL_AURA_MOD_INCREASE_FLIGHT_SPEED;
        case 209: return SPELL_AURA_MOD_MOUNTED_FLIGHT_SPEED_ALWAYS;
        case 210: return SPELL_AURA_MOD_VEHICLE_SPEED_ALWAYS;
        case 211: return SPELL_AURA_MOD_FLIGHT_SPEED_NOT_STACK;
        case 212: return SPELL_AURA_MOD_HONOR_GAIN_PCT;
        case 213: return SPELL_AURA_MOD_RAGE_FROM_DAMAGE_DEALT;
        case 214: return SPELL_AURA_214;
        case 215: return SPELL_AURA_ARENA_PREPARATION;
        case 216: return SPELL_AURA_HASTE_SPELLS;
        case 217: return SPELL_AURA_MOD_MELEE_HASTE_2;
        case 218: return SPELL_AURA_ADD_PCT_MODIFIER_BY_SPELL_LABEL;
        case 219: return SPELL_AURA_ADD_FLAT_MODIFIER_BY_SPELL_LABEL;
        case 220: return SPELL_AURA_MOD_ABILITY_SCHOOL_MASK;
        case 221: return SPELL_AURA_MOD_DETAUNT;
        case 222: return SPELL_AURA_REMOVE_TRANSMOG_COST;
        case 223: return SPELL_AURA_REMOVE_BARBER_SHOP_COST;
        case 224: return SPELL_AURA_LEARN_TALENT;
        case 225: return SPELL_AURA_MOD_VISIBILITY_RANGE;
        case 226: return SPELL_AURA_PERIODIC_DUMMY;
        case 227: return SPELL_AURA_PERIODIC_TRIGGER_SPELL_WITH_VALUE;
        case 228: return SPELL_AURA_DETECT_STEALTH;
        case 229: return SPELL_AURA_MOD_AOE_DAMAGE_AVOIDANCE;
        case 230: return SPELL_AURA_MOD_MAX_HEALTH;
        case 231: return SPELL_AURA_PROC_TRIGGER_SPELL_WITH_VALUE;
        case 232: return SPELL_AURA_MECHANIC_DURATION_MOD;
        case 233: return SPELL_AURA_CHANGE_MODEL_FOR_ALL_HUMANOIDS;
        case 234: return SPELL_AURA_MECHANIC_DURATION_MOD_NOT_STACK;
        case 235: return SPELL_AURA_MOD_HOVER_NO_HEIGHT_OFFSET;
        case 236: return SPELL_AURA_CONTROL_VEHICLE;
        case 237: return SPELL_AURA_237;
        case 238: return SPELL_AURA_238;
        case 239: return SPELL_AURA_MOD_SCALE_2;
        case 240: return SPELL_AURA_MOD_EXPERTISE;
        case 241: return SPELL_AURA_FORCE_MOVE_FORWARD;
        case 242: return SPELL_AURA_MOD_SPELL_DAMAGE_FROM_HEALING;
        case 243: return SPELL_AURA_MOD_FACTION;
        case 244: return SPELL_AURA_COMPREHEND_LANGUAGE;
        case 245: return SPELL_AURA_MOD_AURA_DURATION_BY_DISPEL;
        case 246: return SPELL_AURA_MOD_AURA_DURATION_BY_DISPEL_NOT_STACK;
        case 247: return SPELL_AURA_CLONE_CASTER;
        case 248: return SPELL_AURA_MOD_COMBAT_RESULT_CHANCE;
        case 249: return SPELL_AURA_MOD_DAMAGE_PERCENT_DONE_BY_TARGET_AURA_MECHANIC;
        case 250: return SPELL_AURA_MOD_INCREASE_HEALTH_2;
        case 251: return SPELL_AURA_MOD_ENEMY_DODGE;
        case 252: return SPELL_AURA_MOD_SPEED_SLOW_ALL;
        case 253: return SPELL_AURA_MOD_BLOCK_CRIT_CHANCE;
        case 254: return SPELL_AURA_MOD_DISARM_OFFHAND;
        case 255: return SPELL_AURA_MOD_MECHANIC_DAMAGE_TAKEN_PERCENT;
        case 256: return SPELL_AURA_NO_REAGENT_USE;
        case 257: return SPELL_AURA_MOD_TARGET_RESIST_BY_SPELL_CLASS;
        case 258: return SPELL_AURA_OVERRIDE_SUMMONED_OBJECT;
        case 259: return SPELL_AURA_MOD_HOT_PCT;
        case 260: return SPELL_AURA_SCREEN_EFFECT;
        case 261: return SPELL_AURA_PHASE;
        case 262: return SPELL_AURA_ABILITY_IGNORE_AURASTATE;
        case 263: return SPELL_AURA_DISABLE_CASTING_EXCEPT_ABILITIES;
        case 264: return SPELL_AURA_DISABLE_ATTACKING_EXCEPT_ABILITIES;
        case 265: return SPELL_AURA_265;
        case 266: return SPELL_AURA_SET_VIGNETTE;
        case 267: return SPELL_AURA_MOD_IMMUNE_AURA_APPLY_SCHOOL;
        case 268: return SPELL_AURA_MOD_ARMOR_PCT_FROM_STAT;
        case 269: return SPELL_AURA_MOD_IGNORE_TARGET_RESIST;
        case 270: return SPELL_AURA_MOD_SCHOOL_MASK_DAMAGE_FROM_CASTER;
        case 271: return SPELL_AURA_MOD_SPELL_DAMAGE_FROM_CASTER;
        case 272: return SPELL_AURA_MOD_BLOCK_VALUE_PCT;
        case 273: return SPELL_AURA_X_RAY;
        case 274: return SPELL_AURA_MOD_BLOCK_VALUE_FLAT;
        case 275: return SPELL_AURA_MOD_IGNORE_SHAPESHIFT;
        case 276: return SPELL_AURA_MOD_DAMAGE_DONE_FOR_MECHANIC;
        case 277: return SPELL_AURA_277;
        case 278: return SPELL_AURA_MOD_DISARM_RANGED;
        case 279: return SPELL_AURA_INITIALIZE_IMAGES;
        case 280: return SPELL_AURA_280;
        case 281: return SPELL_AURA_PROVIDE_SPELL_FOCUS;
        case 282: return SPELL_AURA_MOD_BASE_HEALTH_PCT;
        case 283: return SPELL_AURA_MOD_HEALING_RECEIVED;
        case 284: return SPELL_AURA_LINKED;
        case 285: return SPELL_AURA_LINKED_2;
        case 286: return SPELL_AURA_MOD_RECOVERY_RATE;
        case 287: return SPELL_AURA_DEFLECT_SPELLS;
        case 288: return SPELL_AURA_IGNORE_HIT_DIRECTION;
        case 289: return SPELL_AURA_PREVENT_DURABILITY_LOSS;
        case 290: return SPELL_AURA_MOD_CRIT_PCT;
        case 291: return SPELL_AURA_MOD_XP_QUEST_PCT;
        case 292: return SPELL_AURA_OPEN_STABLE;
        case 293: return SPELL_AURA_OVERRIDE_SPELLS;
        case 294: return SPELL_AURA_PREVENT_REGENERATE_POWER;
        case 295: return SPELL_AURA_MOD_PERIODIC_DAMAGE_TAKEN;
        case 296: return SPELL_AURA_SET_VEHICLE_ID;
        case 297: return SPELL_AURA_MOD_ROOT_DISABLE_GRAVITY;
        case 298: return SPELL_AURA_MOD_STUN_DISABLE_GRAVITY;
        case 299: return SPELL_AURA_299;
        case 300: return SPELL_AURA_SHARE_DAMAGE_PCT;
        case 301: return SPELL_AURA_SCHOOL_HEAL_ABSORB;
        case 302: return SPELL_AURA_302;
        case 303: return SPELL_AURA_MOD_DAMAGE_DONE_VERSUS_AURASTATE;
        case 304: return SPELL_AURA_MOD_FAKE_INEBRIATE;
        case 305: return SPELL_AURA_MOD_MINIMUM_SPEED;
        case 306: return SPELL_AURA_MOD_CRIT_CHANCE_FOR_CASTER;
        case 307: return SPELL_AURA_CAST_WHILE_WALKING_BY_SPELL_LABEL;
        case 308: return SPELL_AURA_MOD_CRIT_CHANCE_FOR_CASTER_WITH_ABILITIES;
        case 309: return SPELL_AURA_MOD_RESILIENCE;
        case 310: return SPELL_AURA_MOD_CREATURE_AOE_DAMAGE_AVOIDANCE;
        case 311: return SPELL_AURA_IGNORE_COMBAT;
        case 312: return SPELL_AURA_ANIM_REPLACEMENT_SET;
        case 313: return SPELL_AURA_MOUNT_ANIM_REPLACEMENT_SET;
        case 314: return SPELL_AURA_PREVENT_RESURRECTION;
        case 315: return SPELL_AURA_UNDERWATER_WALKING;
        case 316: return SPELL_AURA_SCHOOL_ABSORB_OVERKILL;
        case 317: return SPELL_AURA_MOD_SPELL_POWER_PCT;
        case 318: return SPELL_AURA_MASTERY;
        case 319: return SPELL_AURA_MOD_MELEE_HASTE_3;
        case 320: return SPELL_AURA_320;
        case 321: return SPELL_AURA_MOD_NO_ACTIONS;
        case 322: return SPELL_AURA_INTERFERE_TARGETTING;
        case 323: return SPELL_AURA_323;
        case 324: return SPELL_AURA_OVERRIDE_UNLOCKED_AZERITE_ESSENCE_RANK;
        case 325: return SPELL_AURA_LEARN_PVP_TALENT;
        case 326: return SPELL_AURA_PHASE_GROUP;
        case 327: return SPELL_AURA_PHASE_ALWAYS_VISIBLE;
        case 328: return SPELL_AURA_TRIGGER_SPELL_ON_POWER_PCT;
        case 329: return SPELL_AURA_MOD_POWER_GAIN_PCT;
        case 330: return SPELL_AURA_CAST_WHILE_WALKING;
        case 331: return SPELL_AURA_FORCE_WEATHER;
        case 332: return SPELL_AURA_OVERRIDE_ACTIONBAR_SPELLS;
        case 333: return SPELL_AURA_OVERRIDE_ACTIONBAR_SPELLS_TRIGGERED;
        case 334: return SPELL_AURA_MOD_AUTOATTACK_CRIT_CHANCE;
        case 335: return SPELL_AURA_335;
        case 336: return SPELL_AURA_MOUNT_RESTRICTIONS;
        case 337: return SPELL_AURA_MOD_VENDOR_ITEMS_PRICES;
        case 338: return SPELL_AURA_MOD_DURABILITY_LOSS;
        case 339: return SPELL_AURA_MOD_CRIT_CHANCE_FOR_CASTER_PET;
        case 340: return SPELL_AURA_MOD_RESURRECTED_HEALTH_BY_GUILD_MEMBER;
        case 341: return SPELL_AURA_MOD_SPELL_CATEGORY_COOLDOWN;
        case 342: return SPELL_AURA_MOD_MELEE_RANGED_HASTE_2;
        case 343: return SPELL_AURA_MOD_MELEE_DAMAGE_FROM_CASTER;
        case 344: return SPELL_AURA_MOD_AUTOATTACK_DAMAGE;
        case 345: return SPELL_AURA_BYPASS_ARMOR_FOR_CASTER;
        case 346: return SPELL_AURA_ENABLE_ALT_POWER;
        case 347: return SPELL_AURA_MOD_SPELL_COOLDOWN_BY_HASTE;
        case 348: return SPELL_AURA_MOD_MONEY_GAIN;
        case 349: return SPELL_AURA_MOD_CURRENCY_GAIN;
        case 350: return SPELL_AURA_350;
        case 351: return SPELL_AURA_MOD_CURRENCY_CATEGORY_GAIN_PCT;
        case 352: return SPELL_AURA_352;
        case 353: return SPELL_AURA_MOD_CAMOUFLAGE;
        case 354: return SPELL_AURA_MOD_HEALING_DONE_PCT_VERSUS_TARGET_HEALTH;
        case 355: return SPELL_AURA_MOD_CASTING_SPEED;
        case 356: return SPELL_AURA_PROVIDE_TOTEM_CATEGORY;
        case 357: return SPELL_AURA_ENABLE_BOSS1_UNIT_FRAME;
        case 358: return SPELL_AURA_WORGEN_ALTERED_FORM;
        case 359: return SPELL_AURA_MOD_HEALING_DONE_VERSUS_AURASTATE;
        case 360: return SPELL_AURA_PROC_TRIGGER_SPELL_COPY;
        case 361: return SPELL_AURA_OVERRIDE_AUTOATTACK_WITH_MELEE_SPELL;
        case 362: return SPELL_AURA_362;
        case 363: return SPELL_AURA_MOD_NEXT_SPELL;
        case 364: return SPELL_AURA_364;
        case 365: return SPELL_AURA_MAX_FAR_CLIP_PLANE;
        case 366: return SPELL_AURA_OVERRIDE_SPELL_POWER_BY_AP_PCT;
        case 367: return SPELL_AURA_OVERRIDE_AUTOATTACK_WITH_RANGED_SPELL;
        case 368: return SPELL_AURA_368;
        case 369: return SPELL_AURA_ENABLE_POWER_BAR_TIMER;
        case 370: return SPELL_AURA_SPELL_OVERRIDE_NAME_GROUP;
        case 371: return SPELL_AURA_371;
        case 372: return SPELL_AURA_OVERRIDE_MOUNT_FROM_SET;
        case 373: return SPELL_AURA_MOD_SPEED_NO_CONTROL;
        case 374: return SPELL_AURA_MODIFY_FALL_DAMAGE_PCT;
        case 375: return SPELL_AURA_HIDE_MODEL_AND_EQUIPEMENT_SLOTS;
        case 376: return SPELL_AURA_MOD_CURRENCY_GAIN_FROM_SOURCE;
        case 377: return SPELL_AURA_CAST_WHILE_WALKING_ALL;
        case 378: return SPELL_AURA_MOD_POSSESS_PET;
        case 379: return SPELL_AURA_MOD_MANA_REGEN_PCT;
        case 380: return SPELL_AURA_MOD_GLOBAL_COOLDOWN_BY_HASTE;
        case 381: return SPELL_AURA_MOD_DAMAGE_TAKEN_FROM_CASTER_PET;
        case 382: return SPELL_AURA_MOD_PET_STAT_PCT;
        case 383: return SPELL_AURA_IGNORE_SPELL_COOLDOWN;
        case 384: return SPELL_AURA_384;
        case 385: return SPELL_AURA_385;
        case 386: return SPELL_AURA_386;
        case 387: return SPELL_AURA_387;
        case 388: return SPELL_AURA_MOD_TAXI_FLIGHT_SPEED;
        case 389: return SPELL_AURA_389;
        case 390: return SPELL_AURA_390;
        case 391: return SPELL_AURA_391;
        case 392: return SPELL_AURA_392;
        case 393: return SPELL_AURA_BLOCK_SPELLS_IN_FRONT;
        case 394: return SPELL_AURA_SHOW_CONFIRMATION_PROMPT;
        case 395: return SPELL_AURA_AREA_TRIGGER;
        case 396: return SPELL_AURA_TRIGGER_SPELL_ON_POWER_AMOUNT;
        case 397: return SPELL_AURA_BATTLEGROUND_PLAYER_POSITION_FACTIONAL;
        case 398: return SPELL_AURA_BATTLEGROUND_PLAYER_POSITION;
        case 399: return SPELL_AURA_MOD_TIME_RATE;
        case 400: return SPELL_AURA_MOD_SKILL_2;
        case 401: return SPELL_AURA_401;
        case 402: return SPELL_AURA_MOD_OVERRIDE_POWER_DISPLAY;
        case 403: return SPELL_AURA_OVERRIDE_SPELL_VISUAL;
        case 404: return SPELL_AURA_OVERRIDE_ATTACK_POWER_BY_SP_PCT;
        case 405: return SPELL_AURA_MOD_RATING_PCT;
        case 406: return SPELL_AURA_KEYBOUND_OVERRIDE;
        case 407: return SPELL_AURA_MOD_FEAR_2;
        case 408: return SPELL_AURA_SET_ACTION_BUTTON_SPELL_COUNT;
        case 409: return SPELL_AURA_CAN_TURN_WHILE_FALLING;
        case 410: return SPELL_AURA_410;
        case 411: return SPELL_AURA_MOD_MAX_CHARGES;
        case 412: return SPELL_AURA_412;
        case 413: return SPELL_AURA_MOD_RANGED_ATTACK_DEFLECT_CHANCE;
        case 414: return SPELL_AURA_MOD_RANGED_ATTACK_BLOCK_CHANCE_IN_FRONT;
        case 415: return SPELL_AURA_415;
        case 416: return SPELL_AURA_MOD_COOLDOWN_BY_HASTE_REGEN;
        case 417: return SPELL_AURA_MOD_GLOBAL_COOLDOWN_BY_HASTE_REGEN;
        case 418: return SPELL_AURA_MOD_MAX_POWER;
        case 419: return SPELL_AURA_MOD_BASE_MANA_PCT;
        case 420: return SPELL_AURA_MOD_BATTLE_PET_XP_PCT;
        case 421: return SPELL_AURA_MOD_ABSORB_EFFECTS_DONE_PCT;
        case 422: return SPELL_AURA_MOD_ABSORB_EFFECTS_TAKEN_PCT;
        case 423: return SPELL_AURA_MOD_MANA_COST_PCT;
        case 424: return SPELL_AURA_CASTER_IGNORE_LOS;
        case 425: return SPELL_AURA_425;
        case 426: return SPELL_AURA_426;
        case 427: return SPELL_AURA_SCALE_PLAYER_LEVEL;
        case 428: return SPELL_AURA_LINKED_SUMMON;
        case 429: return SPELL_AURA_MOD_SUMMON_DAMAGE;
        case 430: return SPELL_AURA_PLAY_SCENE;
        case 431: return SPELL_AURA_MOD_OVERRIDE_ZONE_PVP_TYPE;
        case 432: return SPELL_AURA_432;
        case 433: return SPELL_AURA_433;
        case 434: return SPELL_AURA_434;
        case 435: return SPELL_AURA_435;
        case 436: return SPELL_AURA_MOD_ENVIRONMENTAL_DAMAGE_TAKEN;
        case 437: return SPELL_AURA_MOD_MINIMUM_SPEED_RATE;
        case 438: return SPELL_AURA_PRELOAD_PHASE;
        case 439: return SPELL_AURA_439;
        case 440: return SPELL_AURA_MOD_MULTISTRIKE_DAMAGE;
        case 441: return SPELL_AURA_MOD_MULTISTRIKE_CHANCE;
        case 442: return SPELL_AURA_MOD_READINESS;
        case 443: return SPELL_AURA_MOD_LEECH;
        case 444: return SPELL_AURA_444;
        case 445: return SPELL_AURA_445;
        case 446: return SPELL_AURA_MOD_DRAGONRIDING;
        case 447: return SPELL_AURA_MOD_XP_FROM_CREATURE_TYPE;
        case 448: return SPELL_AURA_448;
        case 449: return SPELL_AURA_449;
        case 450: return SPELL_AURA_450;
        case 451: return SPELL_AURA_OVERRIDE_PET_SPECS;
        case 452: return SPELL_AURA_452;
        case 453: return SPELL_AURA_CHARGE_RECOVERY_MOD;
        case 454: return SPELL_AURA_CHARGE_RECOVERY_MULTIPLIER;
        case 455: return SPELL_AURA_MOD_ROOT_2;
        case 456: return SPELL_AURA_CHARGE_RECOVERY_AFFECTED_BY_HASTE;
        case 457: return SPELL_AURA_CHARGE_RECOVERY_AFFECTED_BY_HASTE_REGEN;
        case 458: return SPELL_AURA_IGNORE_DUAL_WIELD_HIT_PENALTY;
        case 459: return SPELL_AURA_IGNORE_MOVEMENT_FORCES;
        case 460: return SPELL_AURA_RESET_COOLDOWNS_ON_DUEL_START;
        case 461: return SPELL_AURA_461;
        case 462: return SPELL_AURA_MOD_HEALING_AND_ABSORB_FROM_CASTER;
        case 463: return SPELL_AURA_CONVERT_CRIT_RATING_PCT_TO_PARRY_RATING;
        case 464: return SPELL_AURA_MOD_ATTACK_POWER_OF_BONUS_ARMOR;
        case 465: return SPELL_AURA_MOD_BONUS_ARMOR;
        case 466: return SPELL_AURA_MOD_BONUS_ARMOR_PCT;
        case 467: return SPELL_AURA_MOD_STAT_BONUS_PCT;
        case 468: return SPELL_AURA_TRIGGER_SPELL_ON_HEALTH_PCT;
        case 469: return SPELL_AURA_SHOW_CONFIRMATION_PROMPT_WITH_DIFFICULTY;
        case 470: return SPELL_AURA_MOD_AURA_TIME_RATE_BY_SPELL_LABEL;
        case 471: return SPELL_AURA_MOD_VERSATILITY;
        case 472: return SPELL_AURA_472;
        case 473: return SPELL_AURA_PREVENT_DURABILITY_LOSS_FROM_COMBAT;
        case 474: return SPELL_AURA_REPLACE_ITEM_BONUS_TREE;
        case 475: return SPELL_AURA_ALLOW_USING_GAMEOBJECTS_WHILE_MOUNTED;
        case 476: return SPELL_AURA_MOD_CURRENCY_GAIN_LOOTED;
        case 477: return SPELL_AURA_477;
        case 478: return SPELL_AURA_478;
        case 479: return SPELL_AURA_479;
        case 480: return SPELL_AURA_MOD_ARTIFACT_ITEM_LEVEL;
        case 481: return SPELL_AURA_CONVERT_CONSUMED_RUNE;
        case 482: return SPELL_AURA_PROFIL_CAMERA;
        case 483: return SPELL_AURA_SUPPRESS_TRANSFORMS;
        case 484: return SPELL_AURA_ALLOW_INTERRUPT_SPELL;
        case 485: return SPELL_AURA_MOD_MOVEMENT_FORCE_MAGNITUDE;
        case 486: return SPELL_AURA_486;
        case 487: return SPELL_AURA_COSMETIC_MOUNTED;
        case 488: return SPELL_AURA_DISABLE_GRAVITY;
        case 489: return SPELL_AURA_MOD_ALTERNATIVE_DEFAULT_LANGUAGE;
        case 490: return SPELL_AURA_SWITCH_TEAM;
        case 491: return SPELL_AURA_491;
        case 492: return SPELL_AURA_492;
        case 493: return SPELL_AURA_ANIMAL_COMPANION;
        case 494: return SPELL_AURA_SET_POWER_POINT_CHARGE;
        case 495: return SPELL_AURA_TRIGGER_SPELL_ON_EXPIRE;
        case 496: return SPELL_AURA_ALLOW_CHANGING_EQUIPMENT_IN_TORGHAST;
        case 497: return SPELL_AURA_MOD_ANIMA_GAIN;
        case 498: return SPELL_AURA_CURRENCY_LOSS_PCT_ON_DEATH;
        case 499: return SPELL_AURA_MOD_RESTED_XP_CONSUMPTION;
        case 500: return SPELL_AURA_IGNORE_SPELL_CHARGE_COOLDOWN;
        case 501: return SPELL_AURA_MOD_CRITICAL_DAMAGE_TAKEN_FROM_CASTER;
        case 502: return SPELL_AURA_MOD_VERSATILITY_DAMAGE_DONE_BENEFIT;
        case 503: return SPELL_AURA_MOD_VERSATILITY_HEALING_DONE_BENEFIT;
        case 504: return SPELL_AURA_MOD_HEALING_TAKEN_FROM_CASTER;
        case 505: return SPELL_AURA_MOD_PLAYER_CHOICE_REROLLS;
        case 506: return SPELL_AURA_DISABLE_INERTIA;
        case 507: return SPELL_AURA_507;
        case 508: return SPELL_AURA_508;
        case 509: return SPELL_AURA_509;
        case 510: return SPELL_AURA_MODIFIED_RAID_INSTANCE;
        case 511: return SPELL_AURA_511;
        case 512: return SPELL_AURA_512;
        case 513: return SPELL_AURA_513;
        case 514: return SPELL_AURA_514;
        case 515: return SPELL_AURA_515;
        case 516: return SPELL_AURA_516;
        case 517: return SPELL_AURA_517;
        case 518: return SPELL_AURA_518;
        case 519: return SPELL_AURA_519;
        case 520: return SPELL_AURA_520;
        case 521: return SPELL_AURA_521;
        case 522: return SPELL_AURA_522;
        case 523: return SPELL_AURA_523;
        case 524: return SPELL_AURA_524;
        case 525: return SPELL_AURA_525;
        case 526: return SPELL_AURA_526;
        case 527: return SPELL_AURA_527;
        case 528: return SPELL_AURA_528;
        case 529: return SPELL_AURA_529;
        case 530: return SPELL_AURA_530;
        case 531: return SPELL_AURA_531;
        case 532: return TOTAL_AURAS;
        default: throw std::out_of_range("index");
    }
}

template <>
TC_API_EXPORT size_t EnumUtils<AuraType>::ToIndex(AuraType value)
{
    switch (value)
    {
        case SPELL_AURA_NONE: return 0;
        case SPELL_AURA_BIND_SIGHT: return 1;
        case SPELL_AURA_MOD_POSSESS: return 2;
        case SPELL_AURA_PERIODIC_DAMAGE: return 3;
        case SPELL_AURA_DUMMY: return 4;
        case SPELL_AURA_MOD_CONFUSE: return 5;
        case SPELL_AURA_MOD_CHARM: return 6;
        case SPELL_AURA_MOD_FEAR: return 7;
        case SPELL_AURA_PERIODIC_HEAL: return 8;
        case SPELL_AURA_MOD_ATTACKSPEED: return 9;
        case SPELL_AURA_MOD_THREAT: return 10;
        case SPELL_AURA_MOD_TAUNT: return 11;
        case SPELL_AURA_MOD_STUN: return 12;
        case SPELL_AURA_MOD_DAMAGE_DONE: return 13;
        case SPELL_AURA_MOD_DAMAGE_TAKEN: return 14;
        case SPELL_AURA_DAMAGE_SHIELD: return 15;
        case SPELL_AURA_MOD_STEALTH: return 16;
        case SPELL_AURA_MOD_STEALTH_DETECT: return 17;
        case SPELL_AURA_MOD_INVISIBILITY: return 18;
        case SPELL_AURA_MOD_INVISIBILITY_DETECT: return 19;
        case SPELL_AURA_OBS_MOD_HEALTH: return 20;
        case SPELL_AURA_OBS_MOD_POWER: return 21;
        case SPELL_AURA_MOD_RESISTANCE: return 22;
        case SPELL_AURA_PERIODIC_TRIGGER_SPELL: return 23;
        case SPELL_AURA_PERIODIC_ENERGIZE: return 24;
        case SPELL_AURA_MOD_PACIFY: return 25;
        case SPELL_AURA_MOD_ROOT: return 26;
        case SPELL_AURA_MOD_SILENCE: return 27;
        case SPELL_AURA_REFLECT_SPELLS: return 28;
        case SPELL_AURA_MOD_STAT: return 29;
        case SPELL_AURA_MOD_SKILL: return 30;
        case SPELL_AURA_MOD_INCREASE_SPEED: return 31;
        case SPELL_AURA_MOD_INCREASE_MOUNTED_SPEED: return 32;
        case SPELL_AURA_MOD_DECREASE_SPEED: return 33;
        case SPELL_AURA_MOD_INCREASE_HEALTH: return 34;
        case SPELL_AURA_MOD_INCREASE_ENERGY: return 35;
        case SPELL_AURA_MOD_SHAPESHIFT: return 36;
        case SPELL_AURA_EFFECT_IMMUNITY: return 37;
        case SPELL_AURA_STATE_IMMUNITY: return 38;
        case SPELL_AURA_SCHOOL_IMMUNITY: return 39;
        case SPELL_AURA_DAMAGE_IMMUNITY: return 40;
        case SPELL_AURA_DISPEL_IMMUNITY: return 41;
        case SPELL_AURA_PROC_TRIGGER_SPELL: return 42;
        case SPELL_AURA_PROC_TRIGGER_DAMAGE: return 43;
        case SPELL_AURA_TRACK_CREATURES: return 44;
        case SPELL_AURA_TRACK_RESOURCES: return 45;
        case SPELL_AURA_46: return 46;
        case SPELL_AURA_MOD_PARRY_PERCENT: return 47;
        case SPELL_AURA_PERIODIC_TRIGGER_SPELL_FROM_CLIENT: return 48;
        case SPELL_AURA_MOD_DODGE_PERCENT: return 49;
        case SPELL_AURA_MOD_CRITICAL_HEALING_AMOUNT: return 50;
        case SPELL_AURA_MOD_BLOCK_PERCENT: return 51;
        case SPELL_AURA_MOD_WEAPON_CRIT_PERCENT: return 52;
        case SPELL_AURA_PERIODIC_LEECH: return 53;
        case SPELL_AURA_MOD_HIT_CHANCE: return 54;
        case SPELL_AURA_MOD_SPELL_HIT_CHANCE: return 55;
        case SPELL_AURA_TRANSFORM: return 56;
        case SPELL_AURA_MOD_SPELL_CRIT_CHANCE: return 57;
        case SPELL_AURA_MOD_INCREASE_SWIM_SPEED: return 58;
        case SPELL_AURA_MOD_DAMAGE_DONE_CREATURE: return 59;
        case SPELL_AURA_MOD_PACIFY_SILENCE: return 60;
        case SPELL_AURA_MOD_SCALE: return 61;
        case SPELL_AURA_PERIODIC_HEALTH_FUNNEL: return 62;
        case SPELL_AURA_MOD_ADDITIONAL_POWER_COST: return 63;
        case SPELL_AURA_PERIODIC_MANA_LEECH: return 64;
        case SPELL_AURA_MOD_CASTING_SPEED_NOT_STACK: return 65;
        case SPELL_AURA_FEIGN_DEATH: return 66;
        case SPELL_AURA_MOD_DISARM: return 67;
        case SPELL_AURA_MOD_STALKED: return 68;
        case SPELL_AURA_SCHOOL_ABSORB: return 69;
        case SPELL_AURA_PERIODIC_WEAPON_PERCENT_DAMAGE: return 70;
        case SPELL_AURA_STORE_TELEPORT_RETURN_POINT: return 71;
        case SPELL_AURA_MOD_POWER_COST_SCHOOL_PCT: return 72;
        case SPELL_AURA_MOD_POWER_COST_SCHOOL: return 73;
        case SPELL_AURA_REFLECT_SPELLS_SCHOOL: return 74;
        case SPELL_AURA_MOD_LANGUAGE: return 75;
        case SPELL_AURA_FAR_SIGHT: return 76;
        case SPELL_AURA_MECHANIC_IMMUNITY: return 77;
        case SPELL_AURA_MOUNTED: return 78;
        case SPELL_AURA_MOD_DAMAGE_PERCENT_DONE: return 79;
        case SPELL_AURA_MOD_PERCENT_STAT: return 80;
        case SPELL_AURA_SPLIT_DAMAGE_PCT: return 81;
        case SPELL_AURA_WATER_BREATHING: return 82;
        case SPELL_AURA_MOD_BASE_RESISTANCE: return 83;
        case SPELL_AURA_MOD_REGEN: return 84;
        case SPELL_AURA_MOD_POWER_REGEN: return 85;
        case SPELL_AURA_CHANNEL_DEATH_ITEM: return 86;
        case SPELL_AURA_MOD_DAMAGE_PERCENT_TAKEN: return 87;
        case SPELL_AURA_MOD_HEALTH_REGEN_PERCENT: return 88;
        case SPELL_AURA_PERIODIC_DAMAGE_PERCENT: return 89;
        case SPELL_AURA_90: return 90;
        case SPELL_AURA_MOD_DETECT_RANGE: return 91;
        case SPELL_AURA_PREVENTS_FLEEING: return 92;
        case SPELL_AURA_MOD_UNATTACKABLE: return 93;
        case SPELL_AURA_INTERRUPT_REGEN: return 94;
        case SPELL_AURA_GHOST: return 95;
        case SPELL_AURA_SPELL_MAGNET: return 96;
        case SPELL_AURA_MANA_SHIELD: return 97;
        case SPELL_AURA_MOD_SKILL_TALENT: return 98;
        case SPELL_AURA_MOD_ATTACK_POWER: return 99;
        case SPELL_AURA_AURAS_VISIBLE: return 100;
        case SPELL_AURA_MOD_RESISTANCE_PCT: return 101;
        case SPELL_AURA_MOD_MELEE_ATTACK_POWER_VERSUS: return 102;
        case SPELL_AURA_MOD_TOTAL_THREAT: return 103;
        case SPELL_AURA_WATER_WALK: return 104;
        case SPELL_AURA_FEATHER_FALL: return 105;
        case SPELL_AURA_HOVER: return 106;
        case SPELL_AURA_ADD_FLAT_MODIFIER: return 107;
        case SPELL_AURA_ADD_PCT_MODIFIER: return 108;
        case SPELL_AURA_ADD_TARGET_TRIGGER: return 109;
        case SPELL_AURA_MOD_POWER_REGEN_PERCENT: return 110;
        case SPELL_AURA_INTERCEPT_MELEE_RANGED_ATTACKS: return 111;
        case SPELL_AURA_OVERRIDE_CLASS_SCRIPTS: return 112;
        case SPELL_AURA_MOD_RANGED_DAMAGE_TAKEN: return 113;
        case SPELL_AURA_MOD_RANGED_DAMAGE_TAKEN_PCT: return 114;
        case SPELL_AURA_MOD_HEALING: return 115;
        case SPELL_AURA_MOD_REGEN_DURING_COMBAT: return 116;
        case SPELL_AURA_MOD_MECHANIC_RESISTANCE: return 117;
        case SPELL_AURA_MOD_HEALING_PCT: return 118;
        case SPELL_AURA_PVP_TALENTS: return 119;
        case SPELL_AURA_UNTRACKABLE: return 120;
        case SPELL_AURA_EMPATHY: return 121;
        case SPELL_AURA_MOD_OFFHAND_DAMAGE_PCT: return 122;
        case SPELL_AURA_MOD_TARGET_RESISTANCE: return 123;
        case SPELL_AURA_MOD_RANGED_ATTACK_POWER: return 124;
        case SPELL_AURA_MOD_MELEE_DAMAGE_TAKEN: return 125;
        case SPELL_AURA_MOD_MELEE_DAMAGE_TAKEN_PCT: return 126;
        case SPELL_AURA_RANGED_ATTACK_POWER_ATTACKER_BONUS: return 127;
        case SPELL_AURA_MOD_FIXATE: return 128;
        case SPELL_AURA_MOD_SPEED_ALWAYS: return 129;
        case SPELL_AURA_MOD_MOUNTED_SPEED_ALWAYS: return 130;
        case SPELL_AURA_MOD_RANGED_ATTACK_POWER_VERSUS: return 131;
        case SPELL_AURA_MOD_INCREASE_ENERGY_PERCENT: return 132;
        case SPELL_AURA_MOD_INCREASE_HEALTH_PERCENT: return 133;
        case SPELL_AURA_MOD_MANA_REGEN_INTERRUPT: return 134;
        case SPELL_AURA_MOD_HEALING_DONE: return 135;
        case SPELL_AURA_MOD_HEALING_DONE_PERCENT: return 136;
        case SPELL_AURA_MOD_TOTAL_STAT_PERCENTAGE: return 137;
        case SPELL_AURA_MOD_MELEE_HASTE: return 138;
        case SPELL_AURA_FORCE_REACTION: return 139;
        case SPELL_AURA_MOD_RANGED_HASTE: return 140;
        case SPELL_AURA_141: return 141;
        case SPELL_AURA_MOD_BASE_RESISTANCE_PCT: return 142;
        case SPELL_AURA_MOD_RECOVERY_RATE_BY_SPELL_LABEL: return 143;
        case SPELL_AURA_SAFE_FALL: return 144;
        case SPELL_AURA_MOD_INCREASE_HEALTH_PERCENT2: return 145;
        case SPELL_AURA_ALLOW_TAME_PET_TYPE: return 146;
        case SPELL_AURA_MECHANIC_IMMUNITY_MASK: return 147;
        case SPELL_AURA_MOD_CHARGE_RECOVERY_RATE: return 148;
        case SPELL_AURA_REDUCE_PUSHBACK: return 149;
        case SPELL_AURA_MOD_SHIELD_BLOCKVALUE_PCT: return 150;
        case SPELL_AURA_TRACK_STEALTHED: return 151;
        case SPELL_AURA_MOD_DETECTED_RANGE: return 152;
        case SPELL_AURA_MOD_AUTOATTACK_RANGE: return 153;
        case SPELL_AURA_MOD_STEALTH_LEVEL: return 154;
        case SPELL_AURA_MOD_WATER_BREATHING: return 155;
        case SPELL_AURA_MOD_REPUTATION_GAIN: return 156;
        case SPELL_AURA_PET_DAMAGE_MULTI: return 157;
        case SPELL_AURA_ALLOW_TALENT_SWAPPING: return 158;
        case SPELL_AURA_NO_PVP_CREDIT: return 159;
        case SPELL_AURA_160: return 160;
        case SPELL_AURA_MOD_HEALTH_REGEN_IN_COMBAT: return 161;
        case SPELL_AURA_POWER_BURN: return 162;
        case SPELL_AURA_MOD_CRIT_DAMAGE_BONUS: return 163;
        case SPELL_AURA_FORCE_BREATH_BAR: return 164;
        case SPELL_AURA_MELEE_ATTACK_POWER_ATTACKER_BONUS: return 165;
        case SPELL_AURA_MOD_ATTACK_POWER_PCT: return 166;
        case SPELL_AURA_MOD_RANGED_ATTACK_POWER_PCT: return 167;
        case SPELL_AURA_MOD_DAMAGE_DONE_VERSUS: return 168;
        case SPELL_AURA_SET_FFA_PVP: return 169;
        case SPELL_AURA_DETECT_AMORE: return 170;
        case SPELL_AURA_MOD_SPEED_NOT_STACK: return 171;
        case SPELL_AURA_MOD_MOUNTED_SPEED_NOT_STACK: return 172;
        case SPELL_AURA_MOD_RECOVERY_RATE_2: return 173;
        case SPELL_AURA_MOD_SPELL_DAMAGE_OF_STAT_PERCENT: return 174;
        case SPELL_AURA_MOD_SPELL_HEALING_OF_STAT_PERCENT: return 175;
        case SPELL_AURA_SPIRIT_OF_REDEMPTION: return 176;
        case SPELL_AURA_AOE_CHARM: return 177;
        case SPELL_AURA_MOD_MAX_POWER_PCT: return 178;
        case SPELL_AURA_MOD_POWER_DISPLAY: return 179;
        case SPELL_AURA_MOD_FLAT_SPELL_DAMAGE_VERSUS: return 180;
        case SPELL_AURA_MOD_SPELL_CURRENCY_REAGENTS_COUNT_PCT: return 181;
        case SPELL_AURA_SUPPRESS_ITEM_PASSIVE_EFFECT_BY_SPELL_LABEL: return 182;
        case SPELL_AURA_MOD_CRIT_CHANCE_VERSUS_TARGET_HEALTH: return 183;
        case SPELL_AURA_MOD_ATTACKER_MELEE_HIT_CHANCE: return 184;
        case SPELL_AURA_MOD_ATTACKER_RANGED_HIT_CHANCE: return 185;
        case SPELL_AURA_MOD_ATTACKER_SPELL_HIT_CHANCE: return 186;
        case SPELL_AURA_MOD_ATTACKER_MELEE_CRIT_CHANCE: return 187;
        case SPELL_AURA_MOD_ATTACKER_RANGED_CRIT_CHANCE: return 188;
        case SPELL_AURA_MOD_RATING: return 189;
        case SPELL_AURA_MOD_FACTION_REPUTATION_GAIN: return 190;
        case SPELL_AURA_USE_NORMAL_MOVEMENT_SPEED: return 191;
        case SPELL_AURA_MOD_MELEE_RANGED_HASTE: return 192;
        case SPELL_AURA_MELEE_SLOW: return 193;
        case SPELL_AURA_MOD_TARGET_ABSORB_SCHOOL: return 194;
        case SPELL_AURA_LEARN_SPELL: return 195;
        case SPELL_AURA_MOD_COOLDOWN: return 196;
        case SPELL_AURA_MOD_ATTACKER_SPELL_AND_WEAPON_CRIT_CHANCE: return 197;
        case SPELL_AURA_MOD_COMBAT_RATING_FROM_COMBAT_RATING: return 198;
        case SPELL_AURA_199: return 199;
        case SPELL_AURA_MOD_XP_PCT: return 200;
        case SPELL_AURA_FLY: return 201;
        case SPELL_AURA_IGNORE_COMBAT_RESULT: return 202;
        case SPELL_AURA_PREVENT_INTERRUPT: return 203;
        case SPELL_AURA_PREVENT_CORPSE_RELEASE: return 204;
        case SPELL_AURA_MOD_CHARGE_COOLDOWN: return 205;
        case SPELL_AURA_MOD_INCREASE_VEHICLE_FLIGHT_SPEED: return 206;
        case SPELL_AURA_MOD_INCREASE_MOUNTED_FLIGHT_SPEED: return 207;
        case SPELL_AURA_MOD_INCREASE_FLIGHT_SPEED: return 208;
        case SPELL_AURA_MOD_MOUNTED_FLIGHT_SPEED_ALWAYS: return 209;
        case SPELL_AURA_MOD_VEHICLE_SPEED_ALWAYS: return 210;
        case SPELL_AURA_MOD_FLIGHT_SPEED_NOT_STACK: return 211;
        case SPELL_AURA_MOD_HONOR_GAIN_PCT: return 212;
        case SPELL_AURA_MOD_RAGE_FROM_DAMAGE_DEALT: return 213;
        case SPELL_AURA_214: return 214;
        case SPELL_AURA_ARENA_PREPARATION: return 215;
        case SPELL_AURA_HASTE_SPELLS: return 216;
        case SPELL_AURA_MOD_MELEE_HASTE_2: return 217;
        case SPELL_AURA_ADD_PCT_MODIFIER_BY_SPELL_LABEL: return 218;
        case SPELL_AURA_ADD_FLAT_MODIFIER_BY_SPELL_LABEL: return 219;
        case SPELL_AURA_MOD_ABILITY_SCHOOL_MASK: return 220;
        case SPELL_AURA_MOD_DETAUNT: return 221;
        case SPELL_AURA_REMOVE_TRANSMOG_COST: return 222;
        case SPELL_AURA_REMOVE_BARBER_SHOP_COST: return 223;
        case SPELL_AURA_LEARN_TALENT: return 224;
        case SPELL_AURA_MOD_VISIBILITY_RANGE: return 225;
        case SPELL_AURA_PERIODIC_DUMMY: return 226;
        case SPELL_AURA_PERIODIC_TRIGGER_SPELL_WITH_VALUE: return 227;
        case SPELL_AURA_DETECT_STEALTH: return 228;
        case SPELL_AURA_MOD_AOE_DAMAGE_AVOIDANCE: return 229;
        case SPELL_AURA_MOD_MAX_HEALTH: return 230;
        case SPELL_AURA_PROC_TRIGGER_SPELL_WITH_VALUE: return 231;
        case SPELL_AURA_MECHANIC_DURATION_MOD: return 232;
        case SPELL_AURA_CHANGE_MODEL_FOR_ALL_HUMANOIDS: return 233;
        case SPELL_AURA_MECHANIC_DURATION_MOD_NOT_STACK: return 234;
        case SPELL_AURA_MOD_HOVER_NO_HEIGHT_OFFSET: return 235;
        case SPELL_AURA_CONTROL_VEHICLE: return 236;
        case SPELL_AURA_237: return 237;
        case SPELL_AURA_238: return 238;
        case SPELL_AURA_MOD_SCALE_2: return 239;
        case SPELL_AURA_MOD_EXPERTISE: return 240;
        case SPELL_AURA_FORCE_MOVE_FORWARD: return 241;
        case SPELL_AURA_MOD_SPELL_DAMAGE_FROM_HEALING: return 242;
        case SPELL_AURA_MOD_FACTION: return 243;
        case SPELL_AURA_COMPREHEND_LANGUAGE: return 244;
        case SPELL_AURA_MOD_AURA_DURATION_BY_DISPEL: return 245;
        case SPELL_AURA_MOD_AURA_DURATION_BY_DISPEL_NOT_STACK: return 246;
        case SPELL_AURA_CLONE_CASTER: return 247;
        case SPELL_AURA_MOD_COMBAT_RESULT_CHANCE: return 248;
        case SPELL_AURA_MOD_DAMAGE_PERCENT_DONE_BY_TARGET_AURA_MECHANIC: return 249;
        case SPELL_AURA_MOD_INCREASE_HEALTH_2: return 250;
        case SPELL_AURA_MOD_ENEMY_DODGE: return 251;
        case SPELL_AURA_MOD_SPEED_SLOW_ALL: return 252;
        case SPELL_AURA_MOD_BLOCK_CRIT_CHANCE: return 253;
        case SPELL_AURA_MOD_DISARM_OFFHAND: return 254;
        case SPELL_AURA_MOD_MECHANIC_DAMAGE_TAKEN_PERCENT: return 255;
        case SPELL_AURA_NO_REAGENT_USE: return 256;
        case SPELL_AURA_MOD_TARGET_RESIST_BY_SPELL_CLASS: return 257;
        case SPELL_AURA_OVERRIDE_SUMMONED_OBJECT: return 258;
        case SPELL_AURA_MOD_HOT_PCT: return 259;
        case SPELL_AURA_SCREEN_EFFECT: return 260;
        case SPELL_AURA_PHASE: return 261;
        case SPELL_AURA_ABILITY_IGNORE_AURASTATE: return 262;
        case SPELL_AURA_DISABLE_CASTING_EXCEPT_ABILITIES: return 263;
        case SPELL_AURA_DISABLE_ATTACKING_EXCEPT_ABILITIES: return 264;
        case SPELL_AURA_265: return 265;
        case SPELL_AURA_SET_VIGNETTE: return 266;
        case SPELL_AURA_MOD_IMMUNE_AURA_APPLY_SCHOOL: return 267;
        case SPELL_AURA_MOD_ARMOR_PCT_FROM_STAT: return 268;
        case SPELL_AURA_MOD_IGNORE_TARGET_RESIST: return 269;
        case SPELL_AURA_MOD_SCHOOL_MASK_DAMAGE_FROM_CASTER: return 270;
        case SPELL_AURA_MOD_SPELL_DAMAGE_FROM_CASTER: return 271;
        case SPELL_AURA_MOD_BLOCK_VALUE_PCT: return 272;
        case SPELL_AURA_X_RAY: return 273;
        case SPELL_AURA_MOD_BLOCK_VALUE_FLAT: return 274;
        case SPELL_AURA_MOD_IGNORE_SHAPESHIFT: return 275;
        case SPELL_AURA_MOD_DAMAGE_DONE_FOR_MECHANIC: return 276;
        case SPELL_AURA_277: return 277;
        case SPELL_AURA_MOD_DISARM_RANGED: return 278;
        case SPELL_AURA_INITIALIZE_IMAGES: return 279;
        case SPELL_AURA_280: return 280;
        case SPELL_AURA_PROVIDE_SPELL_FOCUS: return 281;
        case SPELL_AURA_MOD_BASE_HEALTH_PCT: return 282;
        case SPELL_AURA_MOD_HEALING_RECEIVED: return 283;
        case SPELL_AURA_LINKED: return 284;
        case SPELL_AURA_LINKED_2: return 285;
        case SPELL_AURA_MOD_RECOVERY_RATE: return 286;
        case SPELL_AURA_DEFLECT_SPELLS: return 287;
        case SPELL_AURA_IGNORE_HIT_DIRECTION: return 288;
        case SPELL_AURA_PREVENT_DURABILITY_LOSS: return 289;
        case SPELL_AURA_MOD_CRIT_PCT: return 290;
        case SPELL_AURA_MOD_XP_QUEST_PCT: return 291;
        case SPELL_AURA_OPEN_STABLE: return 292;
        case SPELL_AURA_OVERRIDE_SPELLS: return 293;
        case SPELL_AURA_PREVENT_REGENERATE_POWER: return 294;
        case SPELL_AURA_MOD_PERIODIC_DAMAGE_TAKEN: return 295;
        case SPELL_AURA_SET_VEHICLE_ID: return 296;
        case SPELL_AURA_MOD_ROOT_DISABLE_GRAVITY: return 297;
        case SPELL_AURA_MOD_STUN_DISABLE_GRAVITY: return 298;
        case SPELL_AURA_299: return 299;
        case SPELL_AURA_SHARE_DAMAGE_PCT: return 300;
        case SPELL_AURA_SCHOOL_HEAL_ABSORB: return 301;
        case SPELL_AURA_302: return 302;
        case SPELL_AURA_MOD_DAMAGE_DONE_VERSUS_AURASTATE: return 303;
        case SPELL_AURA_MOD_FAKE_INEBRIATE: return 304;
        case SPELL_AURA_MOD_MINIMUM_SPEED: return 305;
        case SPELL_AURA_MOD_CRIT_CHANCE_FOR_CASTER: return 306;
        case SPELL_AURA_CAST_WHILE_WALKING_BY_SPELL_LABEL: return 307;
        case SPELL_AURA_MOD_CRIT_CHANCE_FOR_CASTER_WITH_ABILITIES: return 308;
        case SPELL_AURA_MOD_RESILIENCE: return 309;
        case SPELL_AURA_MOD_CREATURE_AOE_DAMAGE_AVOIDANCE: return 310;
        case SPELL_AURA_IGNORE_COMBAT: return 311;
        case SPELL_AURA_ANIM_REPLACEMENT_SET: return 312;
        case SPELL_AURA_MOUNT_ANIM_REPLACEMENT_SET: return 313;
        case SPELL_AURA_PREVENT_RESURRECTION: return 314;
        case SPELL_AURA_UNDERWATER_WALKING: return 315;
        case SPELL_AURA_SCHOOL_ABSORB_OVERKILL: return 316;
        case SPELL_AURA_MOD_SPELL_POWER_PCT: return 317;
        case SPELL_AURA_MASTERY: return 318;
        case SPELL_AURA_MOD_MELEE_HASTE_3: return 319;
        case SPELL_AURA_320: return 320;
        case SPELL_AURA_MOD_NO_ACTIONS: return 321;
        case SPELL_AURA_INTERFERE_TARGETTING: return 322;
        case SPELL_AURA_323: return 323;
        case SPELL_AURA_OVERRIDE_UNLOCKED_AZERITE_ESSENCE_RANK: return 324;
        case SPELL_AURA_LEARN_PVP_TALENT: return 325;
        case SPELL_AURA_PHASE_GROUP: return 326;
        case SPELL_AURA_PHASE_ALWAYS_VISIBLE: return 327;
        case SPELL_AURA_TRIGGER_SPELL_ON_POWER_PCT: return 328;
        case SPELL_AURA_MOD_POWER_GAIN_PCT: return 329;
        case SPELL_AURA_CAST_WHILE_WALKING: return 330;
        case SPELL_AURA_FORCE_WEATHER: return 331;
        case SPELL_AURA_OVERRIDE_ACTIONBAR_SPELLS: return 332;
        case SPELL_AURA_OVERRIDE_ACTIONBAR_SPELLS_TRIGGERED: return 333;
        case SPELL_AURA_MOD_AUTOATTACK_CRIT_CHANCE: return 334;
        case SPELL_AURA_335: return 335;
        case SPELL_AURA_MOUNT_RESTRICTIONS: return 336;
        case SPELL_AURA_MOD_VENDOR_ITEMS_PRICES: return 337;
        case SPELL_AURA_MOD_DURABILITY_LOSS: return 338;
        case SPELL_AURA_MOD_CRIT_CHANCE_FOR_CASTER_PET: return 339;
        case SPELL_AURA_MOD_RESURRECTED_HEALTH_BY_GUILD_MEMBER: return 340;
        case SPELL_AURA_MOD_SPELL_CATEGORY_COOLDOWN: return 341;
        case SPELL_AURA_MOD_MELEE_RANGED_HASTE_2: return 342;
        case SPELL_AURA_MOD_MELEE_DAMAGE_FROM_CASTER: return 343;
        case SPELL_AURA_MOD_AUTOATTACK_DAMAGE: return 344;
        case SPELL_AURA_BYPASS_ARMOR_FOR_CASTER: return 345;
        case SPELL_AURA_ENABLE_ALT_POWER: return 346;
        case SPELL_AURA_MOD_SPELL_COOLDOWN_BY_HASTE: return 347;
        case SPELL_AURA_MOD_MONEY_GAIN: return 348;
        case SPELL_AURA_MOD_CURRENCY_GAIN: return 349;
        case SPELL_AURA_350: return 350;
        case SPELL_AURA_MOD_CURRENCY_CATEGORY_GAIN_PCT: return 351;
        case SPELL_AURA_352: return 352;
        case SPELL_AURA_MOD_CAMOUFLAGE: return 353;
        case SPELL_AURA_MOD_HEALING_DONE_PCT_VERSUS_TARGET_HEALTH: return 354;
        case SPELL_AURA_MOD_CASTING_SPEED: return 355;
        case SPELL_AURA_PROVIDE_TOTEM_CATEGORY: return 356;
        case SPELL_AURA_ENABLE_BOSS1_UNIT_FRAME: return 357;
        case SPELL_AURA_WORGEN_ALTERED_FORM: return 358;
        case SPELL_AURA_MOD_HEALING_DONE_VERSUS_AURASTATE: return 359;
        case SPELL_AURA_PROC_TRIGGER_SPELL_COPY: return 360;
        case SPELL_AURA_OVERRIDE_AUTOATTACK_WITH_MELEE_SPELL: return 361;
        case SPELL_AURA_362: return 362;
        case SPELL_AURA_MOD_NEXT_SPELL: return 363;
        case SPELL_AURA_364: return 364;
        case SPELL_AURA_MAX_FAR_CLIP_PLANE: return 365;
        case SPELL_AURA_OVERRIDE_SPELL_POWER_BY_AP_PCT: return 366;
        case SPELL_AURA_OVERRIDE_AUTOATTACK_WITH_RANGED_SPELL: return 367;
        case SPELL_AURA_368: return 368;
        case SPELL_AURA_ENABLE_POWER_BAR_TIMER: return 369;
        case SPELL_AURA_SPELL_OVERRIDE_NAME_GROUP: return 370;
        case SPELL_AURA_371: return 371;
        case SPELL_AURA_OVERRIDE_MOUNT_FROM_SET: return 372;
        case SPELL_AURA_MOD_SPEED_NO_CONTROL: return 373;
        case SPELL_AURA_MODIFY_FALL_DAMAGE_PCT: return 374;
        case SPELL_AURA_HIDE_MODEL_AND_EQUIPEMENT_SLOTS: return 375;
        case SPELL_AURA_MOD_CURRENCY_GAIN_FROM_SOURCE: return 376;
        case SPELL_AURA_CAST_WHILE_WALKING_ALL: return 377;
        case SPELL_AURA_MOD_POSSESS_PET: return 378;
        case SPELL_AURA_MOD_MANA_REGEN_PCT: return 379;
        case SPELL_AURA_MOD_GLOBAL_COOLDOWN_BY_HASTE: return 380;
        case SPELL_AURA_MOD_DAMAGE_TAKEN_FROM_CASTER_PET: return 381;
        case SPELL_AURA_MOD_PET_STAT_PCT: return 382;
        case SPELL_AURA_IGNORE_SPELL_COOLDOWN: return 383;
        case SPELL_AURA_384: return 384;
        case SPELL_AURA_385: return 385;
        case SPELL_AURA_386: return 386;
        case SPELL_AURA_387: return 387;
        case SPELL_AURA_MOD_TAXI_FLIGHT_SPEED: return 388;
        case SPELL_AURA_389: return 389;
        case SPELL_AURA_390: return 390;
        case SPELL_AURA_391: return 391;
        case SPELL_AURA_392: return 392;
        case SPELL_AURA_BLOCK_SPELLS_IN_FRONT: return 393;
        case SPELL_AURA_SHOW_CONFIRMATION_PROMPT: return 394;
        case SPELL_AURA_AREA_TRIGGER: return 395;
        case SPELL_AURA_TRIGGER_SPELL_ON_POWER_AMOUNT: return 396;
        case SPELL_AURA_BATTLEGROUND_PLAYER_POSITION_FACTIONAL: return 397;
        case SPELL_AURA_BATTLEGROUND_PLAYER_POSITION: return 398;
        case SPELL_AURA_MOD_TIME_RATE: return 399;
        case SPELL_AURA_MOD_SKILL_2: return 400;
        case SPELL_AURA_401: return 401;
        case SPELL_AURA_MOD_OVERRIDE_POWER_DISPLAY: return 402;
        case SPELL_AURA_OVERRIDE_SPELL_VISUAL: return 403;
        case SPELL_AURA_OVERRIDE_ATTACK_POWER_BY_SP_PCT: return 404;
        case SPELL_AURA_MOD_RATING_PCT: return 405;
        case SPELL_AURA_KEYBOUND_OVERRIDE: return 406;
        case SPELL_AURA_MOD_FEAR_2: return 407;
        case SPELL_AURA_SET_ACTION_BUTTON_SPELL_COUNT: return 408;
        case SPELL_AURA_CAN_TURN_WHILE_FALLING: return 409;
        case SPELL_AURA_410: return 410;
        case SPELL_AURA_MOD_MAX_CHARGES: return 411;
        case SPELL_AURA_412: return 412;
        case SPELL_AURA_MOD_RANGED_ATTACK_DEFLECT_CHANCE: return 413;
        case SPELL_AURA_MOD_RANGED_ATTACK_BLOCK_CHANCE_IN_FRONT: return 414;
        case SPELL_AURA_415: return 415;
        case SPELL_AURA_MOD_COOLDOWN_BY_HASTE_REGEN: return 416;
        case SPELL_AURA_MOD_GLOBAL_COOLDOWN_BY_HASTE_REGEN: return 417;
        case SPELL_AURA_MOD_MAX_POWER: return 418;
        case SPELL_AURA_MOD_BASE_MANA_PCT: return 419;
        case SPELL_AURA_MOD_BATTLE_PET_XP_PCT: return 420;
        case SPELL_AURA_MOD_ABSORB_EFFECTS_DONE_PCT: return 421;
        case SPELL_AURA_MOD_ABSORB_EFFECTS_TAKEN_PCT: return 422;
        case SPELL_AURA_MOD_MANA_COST_PCT: return 423;
        case SPELL_AURA_CASTER_IGNORE_LOS: return 424;
        case SPELL_AURA_425: return 425;
        case SPELL_AURA_426: return 426;
        case SPELL_AURA_SCALE_PLAYER_LEVEL: return 427;
        case SPELL_AURA_LINKED_SUMMON: return 428;
        case SPELL_AURA_MOD_SUMMON_DAMAGE: return 429;
        case SPELL_AURA_PLAY_SCENE: return 430;
        case SPELL_AURA_MOD_OVERRIDE_ZONE_PVP_TYPE: return 431;
        case SPELL_AURA_432: return 432;
        case SPELL_AURA_433: return 433;
        case SPELL_AURA_434: return 434;
        case SPELL_AURA_435: return 435;
        case SPELL_AURA_MOD_ENVIRONMENTAL_DAMAGE_TAKEN: return 436;
        case SPELL_AURA_MOD_MINIMUM_SPEED_RATE: return 437;
        case SPELL_AURA_PRELOAD_PHASE: return 438;
        case SPELL_AURA_439: return 439;
        case SPELL_AURA_MOD_MULTISTRIKE_DAMAGE: return 440;
        case SPELL_AURA_MOD_MULTISTRIKE_CHANCE: return 441;
        case SPELL_AURA_MOD_READINESS: return 442;
        case SPELL_AURA_MOD_LEECH: return 443;
        case SPELL_AURA_444: return 444;
        case SPELL_AURA_445: return 445;
        case SPELL_AURA_MOD_DRAGONRIDING: return 446;
        case SPELL_AURA_MOD_XP_FROM_CREATURE_TYPE: return 447;
        case SPELL_AURA_448: return 448;
        case SPELL_AURA_449: return 449;
        case SPELL_AURA_450: return 450;
        case SPELL_AURA_OVERRIDE_PET_SPECS: return 451;
        case SPELL_AURA_452: return 452;
        case SPELL_AURA_CHARGE_RECOVERY_MOD: return 453;
        case SPELL_AURA_CHARGE_RECOVERY_MULTIPLIER: return 454;
        case SPELL_AURA_MOD_ROOT_2: return 455;
        case SPELL_AURA_CHARGE_RECOVERY_AFFECTED_BY_HASTE: return 456;
        case SPELL_AURA_CHARGE_RECOVERY_AFFECTED_BY_HASTE_REGEN: return 457;
        case SPELL_AURA_IGNORE_DUAL_WIELD_HIT_PENALTY: return 458;
        case SPELL_AURA_IGNORE_MOVEMENT_FORCES: return 459;
        case SPELL_AURA_RESET_COOLDOWNS_ON_DUEL_START: return 460;
        case SPELL_AURA_461: return 461;
        case SPELL_AURA_MOD_HEALING_AND_ABSORB_FROM_CASTER: return 462;
        case SPELL_AURA_CONVERT_CRIT_RATING_PCT_TO_PARRY_RATING: return 463;
        case SPELL_AURA_MOD_ATTACK_POWER_OF_BONUS_ARMOR: return 464;
        case SPELL_AURA_MOD_BONUS_ARMOR: return 465;
        case SPELL_AURA_MOD_BONUS_ARMOR_PCT: return 466;
        case SPELL_AURA_MOD_STAT_BONUS_PCT: return 467;
        case SPELL_AURA_TRIGGER_SPELL_ON_HEALTH_PCT: return 468;
        case SPELL_AURA_SHOW_CONFIRMATION_PROMPT_WITH_DIFFICULTY: return 469;
        case SPELL_AURA_MOD_AURA_TIME_RATE_BY_SPELL_LABEL: return 470;
        case SPELL_AURA_MOD_VERSATILITY: return 471;
        case SPELL_AURA_472: return 472;
        case SPELL_AURA_PREVENT_DURABILITY_LOSS_FROM_COMBAT: return 473;
        case SPELL_AURA_REPLACE_ITEM_BONUS_TREE: return 474;
        case SPELL_AURA_ALLOW_USING_GAMEOBJECTS_WHILE_MOUNTED: return 475;
        case SPELL_AURA_MOD_CURRENCY_GAIN_LOOTED: return 476;
        case SPELL_AURA_477: return 477;
        case SPELL_AURA_478: return 478;
        case SPELL_AURA_479: return 479;
        case SPELL_AURA_MOD_ARTIFACT_ITEM_LEVEL: return 480;
        case SPELL_AURA_CONVERT_CONSUMED_RUNE: return 481;
        case SPELL_AURA_PROFIL_CAMERA: return 482;
        case SPELL_AURA_SUPPRESS_TRANSFORMS: return 483;
        case SPELL_AURA_ALLOW_INTERRUPT_SPELL: return 484;
        case SPELL_AURA_MOD_MOVEMENT_FORCE_MAGNITUDE: return 485;
        case SPELL_AURA_486: return 486;
        case SPELL_AURA_COSMETIC_MOUNTED: return 487;
        case SPELL_AURA_DISABLE_GRAVITY: return 488;
        case SPELL_AURA_MOD_ALTERNATIVE_DEFAULT_LANGUAGE: return 489;
        case SPELL_AURA_SWITCH_TEAM: return 490;
        case SPELL_AURA_491: return 491;
        case SPELL_AURA_492: return 492;
        case SPELL_AURA_ANIMAL_COMPANION: return 493;
        case SPELL_AURA_SET_POWER_POINT_CHARGE: return 494;
        case SPELL_AURA_TRIGGER_SPELL_ON_EXPIRE: return 495;
        case SPELL_AURA_ALLOW_CHANGING_EQUIPMENT_IN_TORGHAST: return 496;
        case SPELL_AURA_MOD_ANIMA_GAIN: return 497;
        case SPELL_AURA_CURRENCY_LOSS_PCT_ON_DEATH: return 498;
        case SPELL_AURA_MOD_RESTED_XP_CONSUMPTION: return 499;
        case SPELL_AURA_IGNORE_SPELL_CHARGE_COOLDOWN: return 500;
        case SPELL_AURA_MOD_CRITICAL_DAMAGE_TAKEN_FROM_CASTER: return 501;
        case SPELL_AURA_MOD_VERSATILITY_DAMAGE_DONE_BENEFIT: return 502;
        case SPELL_AURA_MOD_VERSATILITY_HEALING_DONE_BENEFIT: return 503;
        case SPELL_AURA_MOD_HEALING_TAKEN_FROM_CASTER: return 504;
        case SPELL_AURA_MOD_PLAYER_CHOICE_REROLLS: return 505;
        case SPELL_AURA_DISABLE_INERTIA: return 506;
        case SPELL_AURA_507: return 507;
        case SPELL_AURA_508: return 508;
        case SPELL_AURA_509: return 509;
        case SPELL_AURA_MODIFIED_RAID_INSTANCE: return 510;
        case SPELL_AURA_511: return 511;
        case SPELL_AURA_512: return 512;
        case SPELL_AURA_513: return 513;
        case SPELL_AURA_514: return 514;
        case SPELL_AURA_515: return 515;
        case SPELL_AURA_516: return 516;
        case SPELL_AURA_517: return 517;
        case SPELL_AURA_518: return 518;
        case SPELL_AURA_519: return 519;
        case SPELL_AURA_520: return 520;
        case SPELL_AURA_521: return 521;
        case SPELL_AURA_522: return 522;
        case SPELL_AURA_523: return 523;
        case SPELL_AURA_524: return 524;
        case SPELL_AURA_525: return 525;
        case SPELL_AURA_526: return 526;
        case SPELL_AURA_527: return 527;
        case SPELL_AURA_528: return 528;
        case SPELL_AURA_529: return 529;
        case SPELL_AURA_530: return 530;
        case SPELL_AURA_531: return 531;
        case TOTAL_AURAS: return 532;
        default: throw std::out_of_range("value");
    }
}
}
